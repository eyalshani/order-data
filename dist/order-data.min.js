/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nwindow.OrderDataLib = function () {\n    function OrderDataLib() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n        _classCallCheck(this, OrderDataLib);\n\n        console.log('order-data library version : ' + \"1.0.0\");\n        if (options === undefined) {\n            console.log('no option data was supplied to order-data library');\n        } else {\n            this.orderViewService = new window.OrderDataLib.OrderViewService(options);\n        }\n    }\n\n    // get the order data\n\n\n    _createClass(OrderDataLib, [{\n        key: 'getEnrichOrder',\n        value: function getEnrichOrder(tlog, tables, items, users, promotions, modifierGroups, tlogId, offers) {\n            return this.orderViewService.TimeLine.enrichOrder({ tlog: tlog, tables: tables, items: items, users: users, promotions: promotions, modifierGroups: modifierGroups, tlogId: tlogId, offers: offers });\n        }\n    }]);\n\n    return OrderDataLib;\n}();\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/order-view/OrderView.js":
/*!*************************************!*\
  !*** ./src/order-view/OrderView.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nwindow.OrderDataLib.OrderViewService = function () {\n  var _PaymentTypes;\n\n  function OrderViewService(options) {\n    _configure(options);\n  }\n\n  var translateService = void 0;\n  var utils = void 0;\n  var moment = void 0;\n  var discountsService = void 0;\n  var promotionsService = void 0;\n  var timeLineService = void 0;\n  var userService = void 0;\n  var othService = void 0;\n  var paymentsService = void 0;\n  var tableService = void 0;\n  var coursesService = void 0;\n  var dishesService = void 0;\n  var itemsService = void 0;\n\n  var isUS = false;\n  var _options = {};\n\n  function _configure(options) {\n    if (options.local) _options.local = options.local;\n    if (options.isUS !== undefined) {\n      _options.isUS = options.isUS;\n      isUS = options.isUS;\n    };\n\n    if (options.moment) {\n      moment = options.moment;\n    } else {\n      moment = window.moment;\n    }\n\n    translateService = new window.OrderDataLib.TranslateService({\n      local: _options.local\n    });\n\n    utils = new window.OrderDataLib.Utils();\n\n    discountsService = new window.OrderDataLib.DiscountsService({\n      local: _options.local\n    });\n\n    promotionsService = new window.OrderDataLib.PromotionsService();\n\n    timeLineService = new window.OrderDataLib.TimeLineService({\n      local: _options.local\n    });\n\n    userService = new window.OrderDataLib.UserService();\n\n    othService = new window.OrderDataLib.OthService({\n      local: _options.local\n    });\n\n    tableService = new window.OrderDataLib.TableService({\n      local: _options.local\n    });\n\n    paymentsService = new window.OrderDataLib.PaymentsService({\n      local: _options.local\n    });\n\n    coursesService = new window.OrderDataLib.CoursesService();\n\n    dishesService = new window.OrderDataLib.DishesService();\n\n    itemsService = new window.OrderDataLib.ItemsService({\n      local: _options.local\n    });\n  }\n\n  // Enums\n  var Enums = {\n    PaymentTypes: (_PaymentTypes = {\n      OTH: 'OTH',\n      CreditCardPayment: 'CreditCardPayment',\n      ChargeAccountPayment: 'ChargeAccountPayment',\n      CashPayment: 'CashPayment',\n      ChequePayment: 'ChequePayment'\n    }, _defineProperty(_PaymentTypes, 'CreditCardPayment', 'CreditCardPayment'), _defineProperty(_PaymentTypes, 'ChargeAccountRefund', 'ChargeAccountRefund'), _defineProperty(_PaymentTypes, 'CashRefund', 'CashRefund'), _defineProperty(_PaymentTypes, 'ChequeRefund', 'ChequeRefund'), _defineProperty(_PaymentTypes, 'CreditCardRefund', 'CreditCardRefund'), _PaymentTypes),\n    OrderTypes: {\n      Refund: \"Refund\",\n      TA: \"TA\",\n      Delivery: \"Delivery\",\n      Seated: \"Seated\",\n      OTC: \"OTC\"\n    },\n    ReturnTypes: {\n      Cancellation: 'cancellation',\n      TransactionBased: \"TRANSACTION BASED\"\n    },\n    DiscountTypes: {\n      OTH: \"OTH\"\n    },\n    OfferTypes: {\n      Simple: \"Simple\",\n      Combo: 'Combo',\n      ComplexOne: 'Complex-One'\n    },\n    TransTypes: {\n      Reversal: \"Reversal\",\n      Return: \"Return\"\n    },\n    Sources: {\n      TabitPay: \"tabitPay\"\n    },\n    ActionTypes: {\n      kickout: 'kickout',\n      resume: 'resume',\n      suspend: 'suspend'\n    },\n    Resume_Suspend: {\n      manual: 'manual',\n      manager: 'manager',\n      other: 'other'\n    }\n  };\n\n  var billService = {\n    filterOmittedPayments: function filterOmittedPayments(payments) {\n\n      var omittedOrders = [];\n\n      var filteredItems = payments.forEach(function (p) {\n        if (p.PROVIDER_TRANS_STATUS === 'omitted') {\n          if (p.CANCELED) {\n\n            var findRefundPayment = payments.find(function (r) {\n              return !r.CANCELED && r.PAYMENT_TYPE === \"REFUND\" && r.P_AMOUNT === p.P_AMOUNT && r.PROVIDER_TRANS_STATUS === 'omitted';\n            });\n\n            if (findRefundPayment) {\n              omittedOrders.push(p);\n              omittedOrders.push(findRefundPayment);\n            }\n          }\n        }\n      });\n\n      if (omittedOrders.length > 0) {\n        omittedOrders.forEach(function (i) {\n          var findPayment = payments.findIndex(function (p) {\n            return p.P_ID === i.P_ID;\n          });\n          if (findPayment !== -1) {\n            payments.splice(findPayment, 1);\n          }\n        });\n      }\n\n      return payments;\n    },\n\n    resolveItems: function resolveItems(variables, collections) {\n\n      var isReturnOrder = false;\n      if (variables.RETURN_TYPE === Enums.ReturnTypes.TransactionBased) {\n        isReturnOrder = true;\n      }\n\n      var offersList = collections.ORDERED_OFFERS_LIST;\n      if (isReturnOrder) {\n        offersList = collections.RETURNED_OFFERS_LIST;\n      }\n\n      var isTaxExempt = false;\n      if (collections.EXEMPTED_TAXES && collections.EXEMPTED_TAXES.length > 0 && isUS) {\n        isTaxExempt = true;\n      }\n\n      var items = [];\n      var oth = [];\n\n      if (offersList && offersList.length > 0) {\n        offersList.forEach(function (offer) {\n\n          var offerQyt = 0;\n          if (offer.SPLIT_DENOMINATOR && offer.SPLIT_NUMERATOR && offer.SPLIT_DENOMINATOR !== 100 && offer.SPLIT_NUMERATOR !== 100) {\n            offerQyt = offer.SPLIT_NUMERATOR + '/' + offer.SPLIT_DENOMINATOR;\n          } else {\n            offerQyt = offer.OFFER_QTY;\n          }\n\n          if (offer.OFFER_TYPE == Enums.OfferTypes.Simple) {\n            var item = {\n              isOffer: true,\n              name: offer.OFFER_NAME,\n              qty: offerQyt\n            };\n\n            if (offer.ON_THE_HOUSE) {\n              item.amount = translateService.getText('OTH');\n              oth.push(item);\n            } else {\n\n              if (isReturnOrder) {\n                item.amount = utils.toFixedSafe(offer.OFFER_AMOUNT, 2);\n                items.push(item);\n              } else if (offer.OFFER_CALC_AMT !== 0 && offer.OFFER_CALC_AMT !== null) {\n                // if the offer amount is 0 not need to show\n                item.amount = utils.toFixedSafe(offer.OFFER_CALC_AMT, 2);\n                items.push(item);\n              }\n\n              if (offer.OPEN_PRICE) {\n                item.amount = utils.toFixedSafe(offer.OFFER_AMOUNT, 2);\n                items.push(item);\n              }\n            }\n\n            if (offer.ORDERED_OFFER_DISCOUNTS && offer.ORDERED_OFFER_DISCOUNTS.length > 0) {\n              offer.ORDERED_OFFER_DISCOUNTS.forEach(function (discount) {\n                items.push({\n                  isOfferDiscount: true,\n                  name: discount.DISCOUNT_NAME ? discount.DISCOUNT_NAME : translateService.getText('MANUAL_ITEM_DISCOUNT'),\n                  qty: null,\n                  amount: utils.toFixedSafe(discount.DISCOUNT_AMOUNT * -1, 2)\n                });\n              });\n            }\n\n            if (offer.EXTRA_CHARGE_LIST && offer.EXTRA_CHARGE_LIST.length > 0) {\n              offer.EXTRA_CHARGE_LIST.forEach(function (extraCharge) {\n\n                if (extraCharge.EXTRA_CHARGE_MODIFIERS_LIST && extraCharge.EXTRA_CHARGE_MODIFIERS_LIST.length > 0) {\n                  extraCharge.EXTRA_CHARGE_MODIFIERS_LIST.forEach(function (modifier) {\n                    items.push({\n                      isItem: true,\n                      name: modifier.MODIFIER_NAME,\n                      qty: null,\n                      amount: item.ON_THE_HOUSE ? translateService.getText('OTH') : utils.toFixedSafe(modifier.MODIFIER_PRICE, 2)\n                    });\n\n                    if (modifier.MODIFIER_DISCOUNTS && modifier.MODIFIER_DISCOUNTS.length > 0) {\n                      modifier.MODIFIER_DISCOUNTS.forEach(function (discount) {\n                        items.push({\n                          isItem: true,\n                          name: discount.DISCOUNT_NAME,\n                          qty: null,\n                          amount: item.ON_THE_HOUSE ? translateService.getText('OTH') : utils.toFixedSafe(discount.DISCOUNT_AMOUNT * -1, 2)\n                        });\n                      });\n                    }\n                  });\n                }\n                if (extraCharge.ITEM_DISCOUNTS && extraCharge.ITEM_DISCOUNTS.length > 0) {\n                  extraCharge.ITEM_DISCOUNTS.forEach(function (discount) {\n                    items.push({\n                      isItem: true,\n                      name: discount.DISCOUNT_NAME,\n                      qty: null,\n                      amount: utils.toFixedSafe(discount.DISCOUNT_AMOUNT * -1, 2)\n                    });\n                  });\n                }\n              });\n            }\n          }\n\n          if ([Enums.OfferTypes.ComplexOne, Enums.OfferTypes.Combo].indexOf(offer.OFFER_TYPE) > -1) {\n\n            items.push({\n              isOffer: true,\n              name: offer.OFFER_NAME,\n              qty: offerQyt,\n              amount: offer.ON_THE_HOUSE ? translateService.getText('OTH') : utils.toFixedSafe(isReturnOrder ? offer.OFFER_AMOUNT : offer.OFFER_CALC_AMT, 2)\n            });\n\n            if (!isReturnOrder) {\n              if (offer.ORDERED_ITEMS_LIST && offer.ORDERED_ITEMS_LIST.length > 0) offer.ORDERED_ITEMS_LIST.forEach(function (item) {\n                items.push({\n                  isItem: true,\n                  name: item.ITEM_NAME,\n                  qty: null,\n                  amount: null\n                });\n              });\n            }\n\n            if (!isReturnOrder) {\n\n              if (offer.EXTRA_CHARGE_LIST && offer.EXTRA_CHARGE_LIST.length > 0) {\n                offer.EXTRA_CHARGE_LIST.forEach(function (item) {\n\n                  if (item.EXTRA_CHARGE_MODIFIERS_LIST && item.EXTRA_CHARGE_MODIFIERS_LIST.length > 0) {\n                    item.EXTRA_CHARGE_MODIFIERS_LIST.forEach(function (modifier) {\n                      items.push({\n                        isItem: true,\n                        name: modifier.MODIFIER_NAME,\n                        qty: null,\n                        amount: item.ON_THE_HOUSE ? translateService.getText('OTH') : utils.toFixedSafe(item.ITEM_AMOUNT, 2)\n                      });\n                    });\n                  } else if (item.ITEM_DISCOUNTS && item.ITEM_DISCOUNTS.length > 0) {\n\n                    items.push({\n                      isItem: true,\n                      name: item.ITEM_NAME,\n                      qty: null,\n                      amount: utils.toFixedSafe(item.ITEM_AMOUNT, 2)\n                    });\n\n                    if (item.ITEM_DISCOUNTS && item.ITEM_DISCOUNTS.length > 0) {\n                      item.ITEM_DISCOUNTS.forEach(function (discount) {\n                        items.push({\n                          isItem: true,\n                          name: discount.DISCOUNT_NAME,\n                          qty: null,\n                          amount: utils.toFixedSafe(discount.DISCOUNT_AMOUNT * -1, 2)\n                        });\n                      });\n                    }\n                  } else {\n                    items.push({\n                      isItem: true,\n                      name: item.ITEM_NAME,\n                      qty: null,\n                      amount: item.ON_THE_HOUSE ? translateService.getText('OTH') : utils.toFixedSafe(item.ITEM_AMOUNT, 2)\n                    });\n                  }\n                });\n              }\n            }\n\n            if (offer.ORDERED_OFFER_DISCOUNTS && offer.ORDERED_OFFER_DISCOUNTS.length > 0) {\n              offer.ORDERED_OFFER_DISCOUNTS.forEach(function (discount) {\n                items.push({\n                  isOfferDiscount: true,\n                  name: discount.DISCOUNT_NAME ? discount.DISCOUNT_NAME : translateService.getText('MANUAL_ITEM_DISCOUNT'),\n                  qty: null,\n                  amount: utils.toFixedSafe(discount.DISCOUNT_AMOUNT * -1, 2)\n                });\n              });\n            }\n          }\n        });\n      }\n\n      return {\n        items: items,\n        oth: oth,\n        isReturnOrder: isReturnOrder,\n        isTaxExempt: isTaxExempt\n      };\n    },\n    resolveTotals: function resolveTotals(order, collections, isCheck) {\n      var totals = [];\n\n      if (order.TOTAL_SALES_AMOUNT !== undefined && (collections.ORDER_DISCOUNTS_LIST && collections.ORDER_DISCOUNTS_LIST.length > 0 || order.TOTAL_TIPS !== undefined || isUS && collections.EXCLUSIVE_TAXES && collections.EXCLUSIVE_TAXES.length > 0)) {\n        totals.push({\n          name: translateService.getText('TOTAL_ORDER'),\n          amount: utils.toFixedSafe(order.TOTAL_SALES_AMOUNT, 2)\n        });\n      }\n\n      if (collections.ORDER_DISCOUNTS_LIST && collections.ORDER_DISCOUNTS_LIST.length > 0) {\n        collections.ORDER_DISCOUNTS_LIST.forEach(function (discount) {\n          totals.push({\n            name: discount.DISCOUNT_NAME ? discount.DISCOUNT_NAME : translateService.getText('ORDER_DISCOUNT'),\n            amount: utils.toFixedSafe(discount.DISCOUNT_AMOUNT * -1, 2)\n          });\n        });\n      }\n      if (collections.EXCLUSIVE_TAXES && collections.EXCLUSIVE_TAXES.length > 0 && isUS) {\n        collections.EXCLUSIVE_TAXES.forEach(function (tax) {\n          totals.push({\n            type: 'exclusive_tax',\n            name: tax.NAME ? tax.NAME : translateService.getText('ECVLUSIVE_TAX'),\n            amount: utils.toFixedSafe(tax.AMOUNT, 2),\n            rate: tax.RATE\n          });\n        });\n      }\n\n      if (collections.TIPS) {\n\n        var autoGratuityTips = collections.TIPS.filter(function (c) {\n          return c.SCOPE === \"order\";\n        });\n        if (autoGratuityTips && autoGratuityTips.length > 0) {\n\n          //Service charge\n          if (autoGratuityTips && autoGratuityTips.length > 0 && isUS) {\n            autoGratuityTips.forEach(function (tip) {\n\n              var _name = tip.NAME ? tip.NAME : translateService.getText('SERVICE_CHARGE');\n              var _percent = tip.PERCENT;\n              if (_percent !== undefined) {\n                _name = tip.NAME ? tip.NAME + ' ' + _percent + '%' : translateService.getText('SERVICE_CHARGE') + ' ' + _percent + '%';\n              }\n\n              if (tip.AMOUNT !== 0) {\n                totals.push({\n                  type: 'service_charge',\n                  name: _name,\n                  amount: utils.toFixedSafe(tip.AMOUNT, 2)\n                });\n              }\n            });\n          }\n        }\n      }\n\n      if (order.TOTAL_TIPS_ON_PAYMENTS !== undefined || order.TOTAL_TIPS !== undefined) {\n\n        var tipAmount = 0;\n        if (order.TOTAL_TIPS_ON_PAYMENTS !== undefined && order.TOTAL_TIPS_ON_PAYMENTS !== 0) {\n          tipAmount = order.TOTAL_TIPS_ON_PAYMENTS;\n        } else if (order.TOTAL_TIPS !== undefined && order.TOTAL_TIPS !== 0) {\n          tipAmount = order.TOTAL_TIPS;\n        }\n\n        if (tipAmount > 0) {\n          totals.push({\n            type: 'tips',\n            name: translateService.getText('TIP'),\n            amount: utils.toFixedSafe(tipAmount, 2)\n          });\n        }\n        //if it is a returned order, the tip is negative and needs to be presented\n        if (collections.PAYMENT_LIST[0].TRANS_TYPE === Enums.TransTypes.Return) {\n          if (collections.PAYMENT_LIST[0].TIP_AMOUNT !== 0) {\n            totals.push({\n              type: 'tips',\n              name: translateService.getText('TIP'),\n              amount: utils.toFixedSafe(-1 * collections.PAYMENT_LIST[0].TIP_AMOUNT, 2)\n            });\n          }\n        }\n      }\n\n      if (!isUS) {\n        totals.push({\n          name: translateService.getText('TOTAL_INC_VAT'),\n          amount: utils.toFixedSafe(order.TOTAL_IN_VAT || 0, 2)\n        });\n      }\n\n      if (isUS) {\n        totals.push({\n          name: translateService.getText('TOTAL_INC_VAT'),\n          amount: utils.toFixedSafe(order.TOTAL_AMOUNT || 0, 2)\n        });\n      }\n\n      return totals;\n    },\n    resolvePayments: function resolvePayments(order, collections, isCheck) {\n\n      var filteredPyaments = billService.filterOmittedPayments(collections.PAYMENT_LIST);\n      var payments = [];\n\n      filteredPyaments.forEach(function (payment) {\n        payments.push({\n          name: billService.resolvePaymentName(payment),\n          amount: payment.PAYMENT_TYPE ? utils.toFixedSafe(payment.P_AMOUNT * -1, 2) : utils.toFixedSafe(payment.P_AMOUNT, 2),\n          holderName: payment.CUSTOMER_NAME !== undefined ? payment.CUSTOMER_NAME : '',\n          md: {\n            payment: payment\n          }\n        });\n      });\n\n      payments.push({\n        type: 'change',\n        name: translateService.getText('CHANGE'),\n        amount: utils.toFixedSafe(order.CHANGE, 2)\n      });\n\n      return payments;\n    },\n    resolveTaxes: function resolveTaxes(variables, collections, isCheck) {\n\n      var taxes = {\n        InclusiveTaxes: [],\n        ExemptedTaxes: [],\n        ExemptedTaxData: []\n      };\n\n      if (collections.INCLUSIVE_TAXES && collections.INCLUSIVE_TAXES.length > 0 && isUS) {\n\n        taxes.InclusiveTaxes.push({\n          type: 'title',\n          name: translateService.getText('INCLUSIVE_TAXES') + ':',\n          amount: undefined\n        });\n\n        collections.INCLUSIVE_TAXES.forEach(function (tax) {\n          taxes.InclusiveTaxes.push({\n            type: 'inclusive_tax',\n            name: tax.NAME ? tax.NAME : translateService.getText('INCLUSIVE_TAXES'),\n            amount: utils.toFixedSafe(tax.AMOUNT, 2)\n          });\n        });\n      }\n\n      if (collections.EXEMPTED_TAXES && collections.EXEMPTED_TAXES.length > 0 && isUS) {\n\n        taxes.ExemptedTaxes.push({\n          type: 'title',\n          name: translateService.getText('EXEMPTED_TAXES') + ':',\n          amount: undefined\n        });\n\n        collections.EXEMPTED_TAXES.forEach(function (tax) {\n          taxes.ExemptedTaxes.push({\n            type: 'exempted_tax',\n            name: tax.NAME ? tax.NAME : translateService.getText('EXEMPTED_TAX'),\n            amount: utils.toFixedSafe(tax.AMOUNT, 2)\n          });\n        });\n      }\n\n      return taxes;\n    },\n    resolvePaymentName: function resolvePaymentName(payment) {\n      var refund = '';\n      var paymentName = '';\n\n      if (payment.PAYMENT_TYPE === 'REFUND') {\n\n        if (payment.TRANS_TYPE === Enums.TransTypes.Reversal) {\n          refund = translateService.getText('REVERSAL');\n        } else if (payment.TRANS_TYPE === Enums.TransTypes.Return) {\n          refund = translateService.getText('RETURN');\n        } else {\n          refund = translateService.getText('REFUND');\n        }\n      }\n\n      if (payment.P_TENDER_TYPE === 'creditCard' || payment.P_TENDER_TYPE === 'gidtCard') {\n        paymentName = refund !== '' ? refund + ' (' + payment.CARD_TYPE + ' ' + payment.LAST_4 + ')' : payment.CARD_TYPE + ' ' + payment.LAST_4;\n      } else {\n        paymentName = refund + ' ' + payment.P_NAME;\n      }\n\n      return paymentName;\n    },\n    resolvePrintByOrder: function resolvePrintByOrder(variables) {\n\n      return translateService.getText('PRINT_BY_ORDER', [\"order_number\", \"order_date\", \"order_time\"], [variables.ORDER_NO, isUS ? moment(variables.CREATED_AT).format('MM/DD/YYYY') : moment(variables.CREATED_AT).format('DD/MM/YYYY'), isUS ? moment(variables.CREATED_AT).format('h:mm:ss A') : moment(variables.CREATED_AT).format('HH:mm:ss')]);\n    },\n    resolveWaiterDiners: function resolveWaiterDiners(variables) {\n\n      var DISPLAY_NAME = \"\";\n      if (variables.F_NAME !== undefined) {\n        DISPLAY_NAME += variables.F_NAME;\n      }\n\n      if (variables.L_NAME !== undefined) {\n        DISPLAY_NAME += ' ' + variables.L_NAME[0];\n      }\n\n      var TABLE_NO = \"\";\n      if (variables.TABLE_NO !== undefined) {\n        TABLE_NO = variables.TABLE_NO;\n      }\n\n      var RESULT_TEXT = \"\";\n\n      var _TEXT_WAITER_N_DINERS = translateService.getText('WAITER_DINERS', [\"waiter\", \"diners\"], ['' + DISPLAY_NAME, variables.NUMBER_OF_GUESTS]);\n\n      RESULT_TEXT += _TEXT_WAITER_N_DINERS;\n\n      // if (TABLE_NO !== \"\") {\n      //     let _TEXT_TABLE = translateService.getText('TABLE_NUM',\n      //         [\"table\"],\n      //         [TABLE_NO]\n      //     );\n\n      //     RESULT_TEXT += ` ${_TEXT_TABLE}`;\n      // }\n\n      return RESULT_TEXT;\n    }\n  };\n\n  function _enrichOrder(options) {\n    var tlogId = options.tlogId;\n    var tlog = options.tlog;\n    var status = options.status;\n    var tables = options.tables;\n    var items = options.items;\n    var users = options.users;\n    var promotions = options.promotions;\n    var modifierGroups = options.modifierGroups;\n    var offers = options.offers;\n\n    var ResultOrder = {};\n\n    //  Tlog data.\n    var _tlogId = tlogId;\n    var _tlog = tlog;\n    var _status = status;\n\n    //  Resources.\n    var Resources = {\n      Tables: tables,\n      Items: items,\n      Users: users,\n      Offers: offers,\n      Promotions: promotions,\n      AllModifiers: modifierGroups\n\n      /**\r\n       * resolve object Order / Tlog.\r\n       * @param { Object } tlog\r\n       */\n    };function _resolveObject(tlog) {\n      var _result = void 0;\n      if (tlog.order === undefined) {\n        _result = tlog;\n      } else {\n        _result = tlog.order[0];\n      }\n      return _result;\n    }\n\n    function _resolveId(tlog) {\n      return tlog.id || tlog._id;\n    }\n\n    /**\r\n     * resolve total cashback\r\n     * @param { Object } ResultOrder\r\n     */\n    function _resolveTotalCashback(payments) {\n\n      var _totalCashback = 0;\n      payments.forEach(function (payment) {\n        _totalCashback += _.has(payment, 'auxAmount') ? payment.auxAmount : 0;\n      });\n\n      return _totalCashback ? _totalCashback / 100 : 0;;\n    }\n\n    function _resolveDinersNum(diners) {\n      return diners.length;\n    }\n\n    function _resolveTotalAmount(totalAmount) {\n      return totalAmount / 100;\n    }\n\n    function _resolveClosedDate(closed) {\n      return closed;\n    }\n\n    function _resolveHasQuantitySale(order) {\n\n      var hasQuantitySale = false;\n\n      var orderedOffers = order.orderedOffers;\n\n      orderedOffers.forEach(function (offer) {\n        if (offer.quantitySaleId) {\n          hasQuantitySale = true;\n        }\n      });\n\n      return hasQuantitySale;\n    }\n\n    function _resolveCourier(order) {\n      return userService.resolveUser({ userId: order.courier, users: Resources.Users });\n    }\n\n    function _resolveDeliveryNotes(deliveryNotes, tlogId) {\n      if (deliveryNotes) {\n        deliveryNotes.forEach(function (item) {\n          item.tlogId = tlogId;\n          if (item.payments) {\n            item.cardNum = item.payments[0].cardNum;\n            item.providerTransactionId = item.payments[0].providerTransactionId === undefined ? '' : item.payments[0].providerTransactionId;\n            if (item.payments[0].providerResponse) {\n              item.companyName = item.payments[0].providerResponse.companyName === undefined ? '' : item.payments[0].providerResponse.companyName;\n            }\n          }\n        });\n      }\n\n      return deliveryNotes;\n    }\n\n    function _resolveInvoices(invoices, tlogId) {\n      if (invoices) {\n        invoices.forEach(function (item) {\n          item.tlogId = tlogId;\n          if (item.payments && item.payments[0]._type === Enums.PaymentTypes.CreditCardPayment) {\n            item.confirmationNum = item.payments[0].confirmationNum === undefined ? '' : item.payments[0].confirmationNum;\n            item.issuerName = _.get(item, 'payments[0].issuer.name') ? item.payments[0].issuer.name : '';\n            if (item.payments[0].providerResponse) {\n              item.last4 = item.payments[0].providerResponse.Last4;\n              item.CCType = item.payments[0].providerResponse.CCType;\n              item.transId = item.payments[0].providerResponse.TransID;\n            }\n          }\n        });\n      }\n\n      return invoices;\n    }\n\n    function _resolveClubMembers(order) {\n      var _clubMembers = [];\n\n      if (order.diners.length) {\n        _clubMembers = _.chain(order.diners).filter(function (diner) {\n          if (diner.member) return diner;\n        }).map(function (diner) {\n          return {\n            firstName: diner.member.firstName,\n            lastName: diner.member.lastName,\n            phone: diner.member.phone\n          };\n        }).value();\n      }\n\n      return _clubMembers;\n    }\n\n    function _resolveOrderedOffer(offerId) {\n      return Resources.Offers.find(function (offer) {\n        return offer._id === offerId;\n      });\n    }\n\n    function _resolveOrderedOferModifiers(modifiers) {\n\n      var _modifiers = [];\n      modifiers.forEach(function (modifierItem) {\n        _modifiers.push(modifierItem);\n      });\n\n      return _modifiers;\n    }\n\n    function _resolveItemsByOrderedOffers(order) {\n\n      var _orderedOffers = order.orderedOffers;\n      var _orderedItems = order.orderedItems;\n\n      var _discounts = order.orderedDiscounts;\n\n      var items = [];\n\n      if (_orderedOffers) {\n        _orderedOffers.forEach(function (itemOrderedOffer) {\n\n          if (!itemOrderedOffer.cancellation) {\n            var _item = { name: itemOrderedOffer.name, price: itemOrderedOffer.price, _id: itemOrderedOffer._id };\n\n            if (itemOrderedOffer.onTheHouse) {\n              _item.onTheHouse = translateService.getText('OTH');\n            }\n\n            items.push(_item);\n\n            itemOrderedOffer.orderedItems.forEach(function (orderedItem) {\n\n              var _orderedItem = _orderedItems.find(function (item) {\n                return item._id === orderedItem;\n              });\n\n              var _discount = _discounts.find(function (c) {\n                return c.target === orderedItem._id;\n              });\n\n              if (_discount) {\n                _orderedItem.discount = _discount;\n              }\n\n              if (!_orderedItem.price) {\n                _orderedItem.price = 0;\n              }\n\n              _orderedItem.item = Resources.Items.find(function (c) {\n                return c._id === _orderedItem.item;\n              });\n\n              if (_orderedItem.item) {\n                _orderedItem.item.price = _orderedItem.price;\n                items.push(_orderedItem.item);\n              }\n\n              _orderedItem.selectedModifiers = _resolveOrderedOferModifiers(_orderedItem.selectedModifiers);\n              if (_orderedItem.selectedModifiers) {\n                _orderedItem.selectedModifiers.forEach(function (selectedModifierItem) {\n\n                  var _discount = _discounts.find(function (c) {\n                    return c.target === orderedItem._id;\n                  });\n                  if (_discount) {\n                    selectedModifierItem.discount = _discount;\n                  }\n\n                  items.push({\n                    name: selectedModifierItem.name,\n                    price: selectedModifierItem.price,\n                    type: 'modifier',\n                    _id: selectedModifierItem._id\n\n                  });\n                });\n\n                var _notDefaultSelectedModifiers = [];\n                if (_orderedItem.selectedModifiers) {\n                  _orderedItem.selectedModifiers.forEach(function (selectedModifier) {\n                    _notDefaultSelectedModifiers.push(selectedModifier);\n                  });\n                }\n\n                itemOrderedOffer.notDefaultSelectedModifiers = _notDefaultSelectedModifiers;\n\n                var _allRemovedModifiers = [];\n                if (_orderedItem.removedModifiers) {\n                  _orderedItem.removedModifiers.forEach(function (removedModifier) {\n                    _allRemovedModifiers.push(removedModifier);\n                  });\n                }\n                itemOrderedOffer.allRemovedModifiers = _allRemovedModifiers;\n              }\n            });\n            //}\n\n            itemOrderedOffer.offer = _resolveOrderedOffer(itemOrderedOffer.offer);\n          }\n        });\n      }\n\n      return {\n        items: items,\n        orderedOffers: _orderedOffers\n      };\n    }\n\n    function _resolveOrderTypeDisplayText(orderType) {\n      return translateService.getText('ORDER_TYPES_' + orderType.toUpperCase());\n    }\n\n    function _resolvePaymentsTimeLine(order) {\n\n      var PaymentRecord = function PaymentRecord(payment) {\n        this.methodName = payment.methodName;\n        this.creditCardBrand = payment.creditCardBrand;\n        this.customerName = payment.customerDetails ? payment.customerDetails.name : '';\n        this.last4 = payment.last4 !== 'xxxx' ? payment.last4 : '';\n        this.amount = payment.amount;\n        this.faceValue = payment.faceValue;\n        this.quantity = payment.auxIntent ? payment.auxIntent.quantity : ''; //auxIntent.quantity\n        this.creditAccountName = payment.accountName;\n\n        if (isUS) {\n          this.tipAmount = payment.change ? payment.change.amount : '';\n          this.quantity = payment.auxIntent ? payment.auxIntent.quantity : '';\n        } else {\n          if ([Enums.PaymentTypes.CreditCardPayment, Enums.PaymentTypes.ChequePayment].indexOf(payment._type) > -1) {\n            this.tipAmount = payment.cashback ? payment.cashback.amount : '';\n          } else {\n            this.tipAmount = payment.change ? payment.change.amount : ''; //auxIntent.quantity\n          }\n        }\n\n        if (payment.source === Enums.Sources.TabitPay) {\n          this.source = \"(Tabit Pay)\";\n        }\n      };\n\n      var result = [];\n      order.payments.forEach(function (payment) {\n        result.push(new PaymentRecord(payment));\n      });\n      return result;\n    }\n\n    function _checkCahngeOfBD(_tlog, businessDateToDisplay) {\n\n      if (_.get(_tlog, 'order[0]')) {\n        if (moment(_.get(_tlog, 'order[0].businessDate')).valueOf() !== moment(businessDateToDisplay).valueOf()) {\n          return true;\n        }\n\n        return false;\n      }\n\n      return false;\n    }\n\n    function _getTlogBD(_tlog) {\n      if (_.get(_tlog, 'order[0]')) {\n        return _tlog.businessDate;\n      } else {\n        return _tlog.businessDate;\n      }\n    }\n\n    ResultOrder = _resolveObject(_tlog);\n    ResultOrder.tlogId = _resolveId(_tlog);\n    ResultOrder.totalCashback = _resolveTotalCashback(ResultOrder.payments);\n    ResultOrder.dinersNum = _resolveDinersNum(ResultOrder.diners);\n    ResultOrder.totalAmount = _resolveTotalAmount(_tlog.totalAmount);\n    ResultOrder.closed = _resolveClosedDate(ResultOrder.closed);\n    ResultOrder.hasQuantitySale = _resolveHasQuantitySale(ResultOrder);\n    ResultOrder.courier = _resolveCourier(ResultOrder);\n    ResultOrder.businessDateToDisplay = _getTlogBD(_tlog);\n    ResultOrder.changeOfBD = _checkCahngeOfBD(_tlog, ResultOrder.businessDateToDisplay);\n\n    ResultOrder.deliveryNotes = _resolveDeliveryNotes(ResultOrder.deliveryNotes, ResultOrder.tlogId);\n    ResultOrder.invoices = _resolveInvoices(ResultOrder.invoices, ResultOrder.tlogId);\n\n    ResultOrder.waiter = userService.resolveUserName({ userId: ResultOrder.openedBy, users: Resources.Users });\n    ResultOrder.owner = userService.resolveUser({ userId: ResultOrder.owner, users: Resources.Users });\n    ResultOrder.openedBy = userService.resolveUser({ userId: ResultOrder.openedBy, users: Resources.Users });\n    ResultOrder.lockedBy = userService.resolveUser({ userId: ResultOrder.lockedBy, users: Resources.Users });\n\n    ResultOrder.clubMembers = _resolveClubMembers(ResultOrder);\n    ResultOrder.orderTypeDisplayText = _resolveOrderTypeDisplayText(ResultOrder.orderType);\n\n    var ItemsByOrderedOffersResult = _resolveItemsByOrderedOffers(ResultOrder); // merge function #1\n    ResultOrder.orderedOffers = ItemsByOrderedOffersResult.orderedOffers;\n    ResultOrder.items = ItemsByOrderedOffersResult.items;\n\n    // Resolve Payment Names && Payments.\n    ResultOrder.paymentName = paymentsService.resolvePaymentNames(ResultOrder);\n    ResultOrder.payments = paymentsService.resolvePaymentsAmount(ResultOrder);\n\n    // Resolve Table.\n    ResultOrder.table = tableService.resolveTable(ResultOrder, { tables: Resources.Tables });\n\n    // Resolve Total Discount.\n    var TotalDiscountResult = discountsService.resolveTotalDiscount(ResultOrder);\n    ResultOrder.totalDiscount = TotalDiscountResult.totalDiscount;\n    ResultOrder.totalDiscountName = TotalDiscountResult.totalDiscountName;\n\n    // Resolve Promotions From Rewards.\n    ResultOrder.promotions = promotionsService.resolvePromotions(ResultOrder, { promotions: Resources.Promotions });\n    ResultOrder.promotionsCollection = promotionsService.resolvePromotionsCollection(ResultOrder.promotions, ResultOrder.orderedPromotions);\n\n    // Resolve Discounts From Rewards.\n    ResultOrder.discounts = discountsService.resolveDiscounts(ResultOrder);\n    ResultOrder.discountsCollection = discountsService.resolveDiscountsCollection(ResultOrder.discounts);\n\n    // Resolve Dishes.\n    ResultOrder.dishes = dishesService.resolveDishes(ResultOrder);\n\n    // Resolve Courses.\n    ResultOrder.courses = coursesService.resolveCourses(ResultOrder, { users: Resources.Users });\n\n    // Resolve Cencelled Items.\n    ResultOrder.cencelledItems = itemsService.resolveCencelledItems(ResultOrder, { users: Resources.Users });\n\n    // Resolve Unasigned Items.\n    ResultOrder.unasignedItems = itemsService.resolveUnasignedItems(ResultOrder, { users: Resources.Users });\n\n    // Resolve Time Line\n    ResultOrder.timeline = timeLineService.resolveTimeLine(ResultOrder, { users: users });\n\n    var PaymentsTimeLine = _resolvePaymentsTimeLine(ResultOrder);\n    ResultOrder.PaymentsTimeLine = PaymentsTimeLine;\n\n    return ResultOrder;\n  }\n\n  function _resolveBillCheck(printCheck) {\n\n    var CheckBill = function CheckBill(collections, variables, data, printByOrder, waiterDiners) {\n      this.collections = collections;\n      this.variables = variables;\n      this.data = data;\n      this.print_by_order = printByOrder;\n      this.waiter_diners = waiterDiners;\n    };\n\n    var collections = printCheck.printData.collections;\n    var variables = printCheck.printData.variables;\n\n    if (collections.PAYMENT_LIST.length === 0) {\n      return;\n    }\n\n    var data = {};\n\n    var _details = billService.resolveItems(variables, collections);\n\n    data.items = _details.items;\n    data.oth = _details.oth;\n    data.isReturnOrder = _details.isReturnOrder;\n    data.isTaxExempt = _details.isTaxExempt;\n\n    var _totals = billService.resolveTotals(variables, collections, true);\n    data.totals = _totals;\n\n    var _payments = billService.resolvePayments(variables, collections, true);\n    data.payments = _payments;\n\n    var _taxes = billService.resolveTaxes(variables, collections, true);\n    data.taxes = _taxes;\n\n    var printByOrder = billService.resolvePrintByOrder(variables);\n    var waiterDiners = billService.resolveWaiterDiners(variables);\n\n    var checkBill = new CheckBill(collections, variables, data, printByOrder, waiterDiners);\n    return checkBill;\n  }\n\n  function _resolveBillData(printBill, isUS) {\n    var DataBill = function DataBill(collections, variables, data, printByOrder, waiterDiners) {\n      this.collections = collections;\n      this.variables = variables;\n      this.data = data;\n      this.print_by_order = printByOrder;\n      this.waiter_diners = waiterDiners;\n    };\n\n    var collections = printBill.printData.collections;\n    var variables = printBill.printData.variables;\n\n    var data = {};\n\n    var _details = billService.resolveItems(variables, collections);\n\n    data.items = _details.items;\n    data.oth = _details.oth;\n    data.isReturnOrder = _details.isReturnOrder;\n    data.isTaxExempt = _details.isTaxExempt;\n\n    var _totals = billService.resolveTotals(variables, collections, true);\n    data.totals = _totals;\n\n    var _payments = billService.resolvePayments(variables, collections, true);\n    data.payments = _payments;\n\n    var _taxes = billService.resolveTaxes(variables, collections, true);\n    data.taxes = _taxes;\n\n    data.isUS = isUS;\n\n    var printByOrder = billService.resolvePrintByOrder(variables);\n    var waiterDiners = billService.resolveWaiterDiners(variables);\n\n    return new DataBill(collections, variables, data, printByOrder, waiterDiners);\n  }\n\n  OrderViewService.prototype.TimeLine = { enrichOrder: _enrichOrder };\n\n  OrderViewService.prototype.Bill = {\n    resolveBillCheck: _resolveBillCheck,\n    resolveBillData: _resolveBillData\n  };\n\n  return OrderViewService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/OrderView.js?");

/***/ }),

/***/ "./src/order-view/Translate.js":
/*!*************************************!*\
  !*** ./src/order-view/Translate.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.TranslateService = function () {\n\n    function TranslateService(options) {\n        _configure(options);\n    }\n\n    var _translate = {\n        \"en-US\": {\n            \"OTH\": \"OTH\",\n            \"MANUAL_ITEM_DISCOUNT\": \"Manual Discount\",\n            \"TOTAL_ORDER\": \"Subtotal\",\n            \"ORDER_DISCOUNT\": \"Order Discount\",\n            \"ECVLUSIVE_TAX\": \"Exclusive Tax\",\n            \"SERVICE_CHARGE\": \"Service Charge\",\n            \"TIP\": \"Tip\",\n            \"TOTAL_INC_VAT\": \"Check Total\",\n            \"CHANGE\": \"Change\",\n            \"INCLUSIVE_TAXES\": \"Inclusive Taxes\",\n            \"EXEMPTED_TAXES\": \"Exempted Taxes\",\n            \"EXEMPTED_TAX\": \"Tax Exempt\",\n            \"REVERSAL\": \"Reversal\",\n            \"RETURN\": \"Return\",\n            \"REFUND\": \"Refund\",\n            \"PRINT_BY_ORDER\": \"Order {{order_number}} on {{order_date}} {{order_time}}\",\n            \"WAITER_DINERS\": \"Server {{waiter}} Diners {{diners}}\",\n            \"TABLE_NUM\": \"Table {{table}}\",\n            \"TA\": \"TA\",\n            \"DELIVERY\": \"Delivery\",\n            \"INITIATED_DISCOUNT\": \"Initiated.D\",\n            \"CANCEL\": \"Cancel\",\n            \"CUSTOMER_NAME\": \"Name\",\n            \"LAST_4\": \"Last 4 Digits\",\n            \"AMOUNT\": \"Amount\",\n            \"CHARGE_ACCOUNT\": \"Charge Account\",\n            \"CASH\": \"Cash\",\n            \"GIFT_CARD\": \"Gift Card\",\n            \"GIFT_CARD_LOAD\": \"Charge Gift Card\",\n            \"CHEQUE\": \"Cheque\",\n            \"CREDIT\": \"Credit\",\n            \"CHARGE_ACCOUNT_REFUND\": \"Charge account refund\",\n            \"CASH_REFUND\": \"Cash Refund\",\n            \"CHEQUE_REFUND\": \"Cheque Refund\",\n            \"CREDIT_REFUND\": \"Credit Refund\",\n            \"OPEN\": \"Open\",\n            \"ORDER\": \"Order\",\n            \"CLOSE\": \"Close\",\n            \"PAYMENT\": \"Payment\",\n            \"APPROVED\": \"Approved\",\n            \"OTH_ORDER_APPLIED\": \"Order OTH Requested\",\n            \"OTH_ORDER_APPROVED\": \"Order OTH Approved\",\n            \"OTH_ITEM_APPLIED\": \"Item OTH Requested\",\n            \"OTH_ITEM_APPROVED\": \"Item OTH Approved\",\n            \"CANCEL_ITEM_APPLIED\": \"Cancel Item Requested\",\n            \"CANCEL_ITEM_APPROVED\": \"Cancel Item Approved\",\n            \"RETURN_ITEM_APPLIED\": \"Return Item Requested\",\n            \"RETURN_ITEM_APPROVED\": \"Return Item Approved\",\n            \"PERCENT_OFF_ORDER\": \"% Off Order\",\n            \"AMOUNT_OFF_ORDER\": \" Off Order\",\n            \"PERCENT_OFF_ITEM\": \"% Off Item\",\n            \"APPLIED_SEGMENTATION\": \"Tag Applied\",\n            \"APPROVED_SEGMENTATION\": \"Tag Approved\",\n            \"ORDER_TYPES_SEATED\": \"Seated\",\n            \"ORDER_TYPES_TA\": \"TA\",\n            \"ORDER_TYPES_DELIVERY\": \"Delivery\",\n            \"ORDER_TYPES_REFUND\": \"Refund\",\n            \"ORDER_TYPES_OTC\": \"OTC\",\n            \"ORDER_TYPES_MEDIAEXCHANGE\": \"Media Exchange\",\n            \"OTH_TYPE_COMPENSATION\": \"Compensation\",\n            \"OTH_TYPE_CONSERVATION\": \"Conservation\",\n            \"OTH_TYPE_ORGANIZATIONAL\": \"Staff\",\n            \"SUSPEND_MANUAL\": 'Tehchnical Support',\n            \"SUSPEND_MANAGER\": 'Manual',\n            \"RESUME\": \"Resume\",\n            \"SUSPEND\": \"Suspend\"\n        },\n        \"he-IL\": {\n            \"OTH\": \"על חשבון הבית\",\n            \"MANUAL_ITEM_DISCOUNT\": \"הנחה יזומה\",\n            \"TOTAL_ORDER\": \"סה\\\"כ הזמנה\",\n            \"ORDER_DISCOUNT\": \"הנחת חשבון\",\n            \"ECVLUSIVE_TAX\": \"מס שנוסף להזמנה\",\n            \"SERVICE_CHARGE\": \"Service Charge\",\n            \"TIP\": \"תשר\",\n            \"TOTAL_INC_VAT\": \"סה\\\"כ לתשלום\",\n            \"CHANGE\": \"עודף\",\n            \"INCLUSIVE_TAXES\": \"Inclusive Taxes\",\n            \"EXEMPTED_TAXES\": \"Exempted Taxes\",\n            \"EXEMPTED_TAX\": \"Tax Exempt\",\n            \"REVERSAL\": \"ביטול\",\n            \"RETURN\": \"החזרה\",\n            \"REFUND\": \"החזר\",\n            \"PRINT_BY_ORDER\": \"לפי הזמנה מס' {{order_number}} בתאריך {{order_date}} בשעה {{order_time}}\",\n            \"WAITER_DINERS\": \"מלצר {{waiter}} סועדים {{diners}}\",\n            \"TABLE_NUM\": \"שולחן {{table}}\",\n            \"TA\": \"TA\",\n            \"DELIVERY\": \"משלוחים\",\n            \"INITIATED_DISCOUNT\": \"הנחה יזומה\",\n            \"CANCEL\": \"ביטול\",\n            \"CUSTOMER_NAME\": \"שם\",\n            \"LAST_4\": \"4 ספרות\",\n            \"AMOUNT\": \"סכום\",\n            \"CHARGE_ACCOUNT\": \"הקפה\",\n            \"CASH\": \"מזומן\",\n            \"GIFT_CARD\": \"כרטיס תשלום\",\n            \"GIFT_CARD_LOAD\": \"טעינת כרטיס תשלום\",\n            \"CHEQUE\": \"המחאה\",\n            \"CREDIT\": \"אשראי\",\n            \"CHARGE_ACCOUNT_REFUND\": \"החזר הקפה\",\n            \"CASH_REFUND\": \"החזר מזומן\",\n            \"CHEQUE_REFUND\": \"החזר המחאה\",\n            \"CREDIT_REFUND\": \"החזר אשראי\",\n            \"OPEN\": \"פתיחה\",\n            \"ORDER\": \"הזמנה\",\n            \"CLOSE\": \"סגירה\",\n            \"PAYMENT\": \"תשלום\",\n            \"APPROVED\": \"אושר\",\n            \"OTH_ORDER_APPLIED\": \"בקשה ל-OTH חשבון\",\n            \"OTH_ORDER_APPROVED\": \"אישור OTH חשבון\",\n            \"OTH_ITEM_APPLIED\": \"בקשה ל-OTH פריט\",\n            \"OTH_ITEM_APPROVED\": \"אישור OTH פריט\",\n            \"CANCEL_ITEM_APPLIED\": \"בקשה לביטול פריט\",\n            \"CANCEL_ITEM_APPROVED\": \"אישור ביטול פריט\",\n            \"RETURN_ITEM_APPLIED\": \"בקשה להחזרת פריט\",\n            \"RETURN_ITEM_APPROVED\": \"אישור החזרת פריט\",\n            \"PERCENT_OFF_ORDER\": \"% הנחת הזמנה\",\n            \"AMOUNT_OFF_ORDER\": \" הנחת סכום הזמנה\",\n            \"PERCENT_OFF_ITEM\": \"% הנחת פריט\",\n            \"APPLIED_SEGMENTATION\": \"בקשה לתיוג\",\n            \"APPROVED_SEGMENTATION\": \"אישור תיוג\",\n            \"ORDER_TYPES_SEATED\": \"ישיבה\",\n            \"ORDER_TYPES_TA\": \" TA\",\n            \"ORDER_TYPES_DELIVERY\": \"משלוח\",\n            \"ORDER_TYPES_REFUND\": \"החזר\",\n            \"ORDER_TYPES_OTC\": \"דלפק (OTC)\",\n            \"ORDER_TYPES_MEDIAEXCHANGE\": \"טעינת כרטיס\",\n            \"OTH_TYPE_COMPENSATION\": \"פיצוי לקוחות\",\n            \"OTH_TYPE_CONSERVATION\": \"שימור לקוחות\",\n            \"OTH_TYPE_ORGANIZATIONAL\": \"עובדים\",\n            \"SUSPEND_MANUAL\": 'צוות טכני',\n            \"SUSPEND_MANAGER\": 'ידנית',\n            \"SUSPEND_OTHER\": 'ספק תשלום לא זמין',\n            \"RESUME\": \"חזרה מהשהייה\",\n            \"SUSPEND\": \"השהיית הזמנה\"\n        }\n    };\n\n    var _options = {};\n\n    function _configure(options) {\n        if (options.local) _options.local = options.local;\n    }\n\n    function _getText(key, keys, values) {\n        if (key !== undefined) {\n\n            var text = _translate[_options.local][key];\n            if (text !== undefined) {\n\n                if (keys !== undefined && values !== undefined && keys.length > 0 && values.length > 0) {\n                    keys.forEach(function (itemKey, index) {\n                        text = text.replace(\"{{\" + itemKey + \"}}\", values[index]);\n                    });\n                }\n\n                return text;\n            } else {\n                return \"[\" + key + \"]\";\n            }\n        } else {\n            return \"Missing Key\";\n        }\n    }\n\n    TranslateService.prototype.getText = _getText;\n\n    return TranslateService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/Translate.js?");

/***/ }),

/***/ "./src/order-view/Utils.js":
/*!*********************************!*\
  !*** ./src/order-view/Utils.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.Utils = function () {\n\n  function Utils() {}\n\n  function _toFixedSafe(value, num) {\n    if (value !== undefined && value !== null) {\n      return value.toFixed(num);\n    }\n    return \"--\";\n  }\n\n  function _currencyFraction(val, showZero) {\n    if (showZero && (!val || isNaN(val))) val = 0;\n    if (!isNaN(val)) {\n      var num = val / 100;\n      var fixnum = _toFixedSafe(num, 2);\n      return parseFloat(fixnum);\n    }\n  }\n\n  function _groupBy(collection, key) {\n    return collection.reduce(function (rv, item) {\n      (rv[item[key]] = rv[item[key]] || []).push(item);\n      return rv;\n    }, {});\n  };\n\n  function _uniqBy(collection, key) {\n\n    var result = [];\n\n    collection.forEach(function (item) {\n\n      if (key && item[key] !== undefined) {\n        var found = result.find(function (c) {\n          return c[key] === item[key];\n        });\n        if (found === undefined) {\n          item.qty = 1;\n          result.push(item);\n        } else {\n          found.qty++;\n        }\n      }\n    });\n\n    return result;\n  }\n\n  Utils.prototype.toFixedSafe = _toFixedSafe;\n  Utils.prototype.currencyFraction = _currencyFraction;\n  Utils.prototype.groupBy = _groupBy;\n  Utils.prototype.uniqBy = _uniqBy;\n\n  return Utils;\n}();\n\n//# sourceURL=webpack:///./src/order-view/Utils.js?");

/***/ }),

/***/ "./src/order-view/services/Courses.js":
/*!********************************************!*\
  !*** ./src/order-view/services/Courses.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.CoursesService = function () {\n\n    var userService = void 0;\n\n    var CourseActions = ['notified', 'fired', 'served', 'prepared', 'taken'];\n\n    function CoursesService() {\n\n        userService = new window.OrderDataLib.UserService();\n    }\n\n    function resolveCourses(order, options) {\n\n        var users = options.users;\n\n        var courses = order.courses;\n        var orderedItems = order.orderedItems;\n        var cancelledOffers = order.cancelledOffers;\n\n        if (courses && courses.length) {\n\n            courses.forEach(function (course) {\n\n                CourseActions.forEach(function (action) {\n\n                    if (course[action]) {\n                        course[action].waiter = userService.resolveUserName({ userId: course[action].by, users: users });\n                    }\n\n                    if (course.orderedItems && course.orderedItems.length > 0) {\n\n                        course.enrichItems = [];\n                        course.orderedItems.forEach(function (item) {\n                            var _orderedItem = orderedItems.find(function (c) {\n                                return c._id === item;\n                            });\n                            if (_orderedItem) {\n                                course.enrichItems.push(_orderedItem);\n                            }\n\n                            var _cancelItem = cancelledOffers.find(function (c) {\n                                return c._id === item;\n                            });\n                            if (_cancelItem) {\n                                course.enrichItems.push(_cancelItem);\n                            }\n                        });\n                    }\n                });\n            });\n        }\n\n        return courses;\n    }\n\n    CoursesService.prototype.resolveCourses = resolveCourses;\n\n    return CoursesService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/Courses.js?");

/***/ }),

/***/ "./src/order-view/services/Discounts.js":
/*!**********************************************!*\
  !*** ./src/order-view/services/Discounts.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.DiscountsService = function () {\n\n    var translateService = void 0;\n    var userService = void 0;\n    var utils = void 0;\n\n    var DiscountTypes = {\n        OTH: \"OTH\",\n        AMOUNT_OFF: \"AmountOff\",\n        PERCENT_OFF: \"PercentOff\"\n    };\n\n    function DiscountsService(options) {\n\n        translateService = new window.OrderDataLib.TranslateService({\n            local: options.local\n        });\n\n        userService = new window.OrderDataLib.UserService();\n\n        utils = new window.OrderDataLib.Utils();\n    }\n\n    function resolveDiscounts(order) {\n\n        var result = [];\n        var tempRewards = [];\n\n        var rewards = JSON.parse(JSON.stringify(order.rewards));\n        var orderedDiscounts = order.orderedDiscounts;\n        var orderedOffers = order.orderedOffers;\n        var orderedItems = order.orderedItems;\n\n        var quantitySaleGroups = {};\n\n        rewards.forEach(function (reward) {\n            var found = orderedDiscounts.find(function (c) {\n                return c._id === reward.promotion;\n            });\n            if (found) {\n                var offer = orderedOffers.find(function (c) {\n                    return c._id === found.target;\n                });\n                reward.md = { orderedDiscount: found, offer: offer };\n                reward.type = 'reward';\n                tempRewards.push(reward);\n            }\n        });\n\n        tempRewards.forEach(function (reward) {\n\n            var offer = reward.md.offer;\n\n            if (offer && offer.quantitySaleId) {\n                if (quantitySaleGroups[offer.quantitySaleId] === undefined) {\n                    quantitySaleGroups[offer.quantitySaleId] = [];\n                }\n\n                quantitySaleGroups[offer.quantitySaleId].push(reward);\n            } else {\n                result.push(reward);\n            }\n        });\n\n        if (!order.onTheHouse) {\n\n            orderedItems.forEach(function (item) {\n\n                var offer = orderedOffers.find(function (c) {\n                    return item._id === _.get(c, 'orderedItems[0]');\n                });\n                if (!offer) {\n                    return;\n                }\n\n                if (offer.onTheHouse && offer.onTheHouse.approved) {\n\n                    var othType = _.get(offer, 'onTheHouse.reason.othType');\n\n                    var discountItem = {\n                        type: 'onTheHouse',\n                        discountType: DiscountTypes.OTH,\n                        amount: offer ? offer.amount : 0,\n                        reasonName: resolveReasonDisplayData(item),\n                        reasonType: !_.isEmpty(othType) ? translateService.getText('OTH_TYPE_' + offer.onTheHouse.reason.othType.toUpperCase()) : ''\n                    };\n\n                    if (offer.quantitySaleId) {\n                        if (quantitySaleGroups[offer.quantitySaleId] === undefined) {\n                            quantitySaleGroups[offer.quantitySaleId] = [];\n                        }\n\n                        quantitySaleGroups[offer.quantitySaleId].push(discountItem);\n                    } else {\n                        result.push(discountItem);\n                    }\n                }\n            });\n\n            if (quantitySaleGroups !== undefined) {\n\n                for (var key in quantitySaleGroups) {\n\n                    if (quantitySaleGroups.hasOwnProperty(key)) {\n\n                        var collection = quantitySaleGroups[key];\n\n                        var qty = collection.length;\n                        var offer = collection[0];\n                        offer.qty = qty;\n                        result.push(offer);\n                    }\n                }\n            }\n        } else {\n\n            // Order OTH.\n\n            var orderOthType = _.get(order, 'onTheHouse.reason.othType');\n\n            result.push({\n                type: 'onTheHouse',\n                discountType: DiscountTypes.OTH,\n                amount: order.totalAmount / 100,\n                reasonName: _.get(order, 'onTheHouse.reason.name') + \": \" + _.get(order, 'onTheHouse.comment'),\n                reasonType: !_.isEmpty(orderOthType) ? translateService.getText('OTH_TYPE_' + orderOthType.toUpperCase()) : ''\n            });\n        }\n\n        result = result.map(function (c) {\n\n            if (c.qty) {\n\n                var amount = 0;\n                var discountAmount = _.get(c, 'discount.amount');\n                if (discountAmount !== undefined) {\n                    amount = discountAmount;\n                } else {\n                    amount = c.amount;\n                }\n\n                c.totalAmount = c.qty * amount;\n            }\n\n            return c;\n        });\n\n        return result;\n    }\n\n    function resolveDiscountsCollection(discounts) {\n\n        var result = [];\n\n        function getDiscountTypeText(discountType, discountItem) {\n\n            var value = 0;\n\n            switch (discountType) {\n                case 'PercentOffOrder':\n                    value = discountItem.discount.percentage + '%';\n                    break;\n                case 'AmountOff':\n                case 'AmountOffOrder':\n                    value = undefined;\n                    break;\n                case 'PercentOff':\n                    value = discountItem.discount.percentage + '%';\n                    break;\n\n            }\n\n            var text = '';\n\n            if (value) {\n                text = value + \" \";\n            }\n\n            if (!_.isEmpty(discountType)) text += translateService.getText(discountType.toUpperCase());\n\n            if (discountItem.qty > 1) {\n                text += \" \" + discountItem.qty + \"x \";\n            }\n\n            return text;\n        }\n\n        discounts.forEach(function (discountItem) {\n\n            if (discountItem.type === 'reward') {\n\n                var discountType = discountItem._type;\n\n                var othType = _.get(discountItem, 'md.orderedDiscount.reason.othType');\n\n                result.push({\n                    discountType: getDiscountTypeText(discountType, discountItem),\n                    amount: discountItem.discount.amount,\n                    reasonName: _.get(discountItem, 'md.orderedDiscount.reason.name'),\n                    totalAmount: discountItem.totalAmount,\n                    reasonType: !_.isEmpty(othType) ? translateService.getText(\"OTH_TYPE_\" + othType.toUpperCase()) : ''\n                });\n            } else {\n\n                // Set 0 when discount type is OTH.\n                if (discountItem.type === \"onTheHouse\") {\n                    discountItem.totalAmount = 0;\n                    discountItem.amount = 0;\n                }\n\n                result.push(discountItem);\n            }\n        });\n\n        return result;\n    }\n\n    function resolveReasonDisplayData(item) {\n\n        var data = \"\";\n\n        if (item.name) {\n            data += \"\" + item.name;\n        }\n\n        if (item.qty !== undefined) {\n            data += \" \" + item.qty + \"x\";\n        }\n\n        if (_.get(item, 'onTheHouse.reason.name') !== undefined) {\n            data += \" - \" + item.onTheHouse.reason.name;\n        }\n\n        if (_.get(item, 'onTheHouse.comment') !== undefined) {\n            data += \" : \" + item.onTheHouse.comment;\n        }\n\n        return data;\n    }\n\n    function resolveDiscountsTimeLine(order, options) {\n\n        var users = options.users;\n\n        var orderedOffers = order.orderedOffers;\n        var orderedDiscounts = order.orderedDiscounts;\n        var rewards = JSON.parse(JSON.stringify(order.rewards));\n\n        var result = [];\n        var quantitySaleReward = [];\n\n        function resolveOffer(reward) {\n            var offer = '';\n            if (reward && reward.requiredResources && reward.requiredResources[0] && reward.requiredResources[0].orderedOffer) {\n                offer = orderedOffers.find(function (item) {\n                    return item._id === reward.requiredResources[0].orderedOffer;\n                });\n            }\n            return offer;\n        }\n\n        if (orderedDiscounts.length) {\n\n            var rewardsHash = {};\n            rewards.forEach(function (reward) {\n                if (reward.requiredResources) {\n                    reward.requiredResources.forEach(function (item) {\n                        if (item.orderedDiscount) {\n                            rewardsHash[item.orderedDiscount] = reward;\n                        }\n                    });\n                }\n            });\n\n            var quantitySaleGroups = {};\n\n            orderedDiscounts.forEach(function (discount) {\n\n                var reward = rewardsHash[discount._id];\n\n                var offer = resolveOffer(reward);\n\n                var data = void 0;\n                var action = void 0;\n                var reasonName = discount.reason !== undefined ? discount.reason.name : \"--\";\n                if (reward && reward._type) {\n                    switch (reward._type) {\n                        case 'PercentOffOrder':\n                            action = translateService.getText('PERCENT_OFF_ORDER') + ' ' + reward.discount.percentage + '%';\n                            data = reasonName;\n                            break;\n\n                        case 'AmountOffOrder':\n                            action = translateService.getText('AMOUNT_OFF_ORDER') + ' ' + reward.discount.amount / 100;\n                            data = reasonName;\n                            break;\n\n                        case 'PercentOff':\n                            action = translateService.getText('PERCENT_OFF_ITEM') + ' ' + reward.discount.percentage + '%';\n                            data = reasonName;\n                            break;\n\n                        case 'AmountOff':\n                            action = translateService.getText('AMOUNT_OFF_ORDER') + ' ' + reward.discount.amount / 100;\n                            data = reasonName;\n                            break;\n                    }\n                } else {\n                    return;\n                    // if (discount && discount.discountType)\n                    //     switch (discount.discountType) {\n                    //         case \"percent\": {\n                    //             action = translateService.getText('PERCENT_OFF_ORDER') + ' ' + discount.value + '%';\n                    //             data = reasonName;\n                    //             break;\n                    //         }\n                    //         case \"amount\": {\n                    //             action = translateService.getText('AMOUNT_OFF_ORDER') + ' ' + discount.value / 100;\n                    //             data = reasonName;\n                    //             break;\n                    //         }\n                    //     }\n                }\n\n                if (reward && reward.discount && reward.discount.amount) discount.discountAmount = reward.discount.amount;\n\n                if (discount.comment) {\n                    data += ': ' + discount.comment;\n                }\n\n                var record = {\n                    action: action,\n                    data: data,\n                    name: offer.name,\n                    at: discount.applied ? discount.applied.at : '',\n                    by: userService.resolveUserName({ userId: _.get(discount, 'applied.by'), users: users })\n                };\n\n                if (offer.quantitySaleId) {\n\n                    if (quantitySaleGroups[offer.quantitySaleId] === undefined) {\n                        quantitySaleGroups[offer.quantitySaleId] = [];\n                    }\n\n                    quantitySaleGroups[offer.quantitySaleId].push(record);\n                } else {\n\n                    if (reward === undefined && record) {\n                        if (quantitySaleReward.length === 0) {\n                            quantitySaleReward.push(record);\n                        }\n                    } else {\n                        result.push(record);\n                    }\n                }\n            });\n\n            for (var key in quantitySaleGroups) {\n                if (quantitySaleGroups.hasOwnProperty(key)) {\n                    var collection = quantitySaleGroups[key];\n                    var record = collection[0];\n                    record.qty = collection.length;\n\n                    // if (record.qty > 1) {\n                    //     record.data += ` ${record.qty}x`;\n                    // }\n\n                    result.push(record);\n                }\n            }\n        }\n\n        return result.concat(quantitySaleReward);\n    }\n\n    function resolveTotalDiscount(order) {\n\n        var rewards = JSON.parse(JSON.stringify(order.rewards));\n        var totalDiscount = \"\";\n        var totalDiscountName = \"\";\n\n        rewards.forEach(function (reward) {\n\n            var _discount = reward.discount;\n\n            if (_discount) {\n                if (_discount && !_discount.rewardedResources) {\n                    totalDiscount = _discount.amount;\n                    totalDiscountName = reward.manual ? translateService.getText('INITIATED_DISCOUNT') : reward.name;\n                }\n            }\n        });\n\n        return {\n            totalDiscount: totalDiscount,\n            totalDiscountName: totalDiscountName\n        };\n    }\n\n    DiscountsService.prototype.resolveDiscounts = resolveDiscounts;\n    DiscountsService.prototype.resolveDiscountsCollection = resolveDiscountsCollection;\n    DiscountsService.prototype.resolveDiscountsTimeLine = resolveDiscountsTimeLine;\n    DiscountsService.prototype.resolveTotalDiscount = resolveTotalDiscount;\n\n    return DiscountsService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/Discounts.js?");

/***/ }),

/***/ "./src/order-view/services/Dishes.js":
/*!*******************************************!*\
  !*** ./src/order-view/services/Dishes.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.DishesService = function () {\n\n        function DishesService(options) {}\n\n        function resolveDishes(order) {\n\n                var result = [];\n\n                var quantitySaleGroups = {};\n\n                var orderedOffers = order.orderedOffers;\n\n                orderedOffers.forEach(function (offer) {\n\n                        if (offer.quantitySaleId) {\n\n                                if (quantitySaleGroups[offer.quantitySaleId] === undefined) {\n                                        quantitySaleGroups[offer.quantitySaleId] = [];\n                                }\n\n                                quantitySaleGroups[offer.quantitySaleId].push(offer);\n                        } else {\n                                result.push(offer);\n                        }\n                });\n\n                if (quantitySaleGroups !== undefined) {\n\n                        for (var key in quantitySaleGroups) {\n\n                                if (quantitySaleGroups.hasOwnProperty(key)) {\n\n                                        var collection = quantitySaleGroups[key];\n\n                                        var qty = collection.length;\n                                        var offer = collection[0];\n                                        offer.qty = qty;\n                                        result.push(offer);\n                                }\n                        }\n                }\n\n                result = result.map(function (offer) {\n\n                        if (offer.qty) {\n                                offer.amount = offer.qty * offer.amount;\n                        }\n\n                        return offer;\n                });\n\n                return result;\n        }\n\n        DishesService.prototype.resolveDishes = resolveDishes;\n\n        return DishesService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/Dishes.js?");

/***/ }),

/***/ "./src/order-view/services/Histories.js":
/*!**********************************************!*\
  !*** ./src/order-view/services/Histories.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.HistoriesService = function () {\n\n    var translateService = void 0;\n    var userService = void 0;\n\n    var ActionTypes = {\n        kickout: 'kickout',\n        resume: 'resume',\n        suspend: 'suspend'\n    };\n\n    var ResumeSuspend = {\n        manual: 'manual',\n        manager: 'manager',\n        other: 'other'\n    };\n\n    var service = {\n        getDataOfResumeOrSuspendOrder: function getDataOfResumeOrSuspendOrder(historyItem) {\n\n            if (historyItem.action === ActionTypes.suspend) {\n\n                if (historyItem.data.source === ResumeSuspend.manual) {\n                    return translateService.getText('SUSPEND_MANUAL');\n                }\n                if (historyItem.data.source === ResumeSuspend.manager) {\n                    return translateService.getText('SUSPEND_MANAGER');\n                }\n                if (historyItem.data.source === ResumeSuspend.other) {\n                    return translateService.getText('SUSPEND_OTHER');\n                }\n            }\n\n            if (historyItem.action === ActionTypes.resume) {\n                return translateService.getText('RESUME');\n            }\n        },\n        getAction: function getAction(action) {\n\n            if (action === ActionTypes.resume) {\n                return translateService.getText('RESUME');\n            }\n\n            if (action === ActionTypes.suspend) {\n                return translateService.getText('SUSPEND');\n            }\n        }\n    };\n\n    function HistoriesService(options) {\n\n        translateService = new window.OrderDataLib.TranslateService({\n            local: options.local\n        });\n\n        userService = new window.OrderDataLib.UserService();\n    }\n\n    function resolveHistoriesToTimeLine(order, options) {\n\n        var users = options.users;\n\n        var result = [];\n\n        var histories = order.history;\n\n        if (histories && histories.length > 0) {\n\n            histories.forEach(function (historyItem) {\n\n                if (historyItem.action === ActionTypes.suspend || historyItem.action === ActionTypes.resume) {\n                    result.push({\n                        action: service.getAction(historyItem.action),\n                        data: service.getDataOfResumeOrSuspendOrder(historyItem),\n                        at: historyItem.at,\n                        by: userService.resolveUserName({ userId: historyItem.by, users: users })\n                    });\n                }\n\n                if (historyItem.action === ActionTypes.kickout) {\n                    result.push({\n                        action: historyItem.action,\n                        data: 'Device name: ' + historyItem.deviceName,\n                        at: historyItem.at,\n                        by: userService.resolveUserName({ userId: historyItem.by, users: users })\n                    });\n                }\n            });\n        }\n\n        return result;\n    }\n\n    HistoriesService.prototype.resolveHistoriesToTimeLine = resolveHistoriesToTimeLine;\n\n    return HistoriesService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/Histories.js?");

/***/ }),

/***/ "./src/order-view/services/Items.js":
/*!******************************************!*\
  !*** ./src/order-view/services/Items.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.ItemsService = function () {\n\n    var userService = void 0;\n    var translateService = void 0;\n\n    var Enums = {\n        ReturnTypes: {\n            Cancellation: 'cancellation',\n            TransactionBased: \"TRANSACTION BASED\",\n            Transfer: \"transfer\"\n        }\n    };\n\n    function ItemsService(options) {\n\n        userService = new window.OrderDataLib.UserService();\n\n        translateService = new window.OrderDataLib.TranslateService({\n            local: options.local\n        });\n    }\n\n    var utilsText = {\n        getCommentText: function getCommentText(comment) {\n\n            if (_.isEmpty(comment)) {\n                return \"\";\n            }\n\n            // patch to translate 'Transfering items'' check if is a transfering by the comment text\n\n            if (comment.indexOf('Transfering items') === 0) {\n                var arr = comment.split(' ');\n                var table = arr[4];\n                return translateService.getText('TRANSFERING_ITEMS_TO_TABLE', ['table'], [table]);\n            } else {\n                return comment;\n            }\n        }\n    };\n\n    function resolveCencelledItems(order, options) {\n\n        var users = options.users;\n\n        var result = [];\n\n        var quantitySaleGroups = {};\n\n        var cancelledOffers = order.cancelledOffers;\n        var orderedItems = order.orderedItems;\n\n        cancelledOffers.forEach(function (offer) {\n\n            var item = orderedItems.find(function (c) {\n                return c._id === _.get(offer, 'cancelledItems[0]');\n            });\n\n            if (item && item.cancellation) {\n\n                if (item.cancellation.applied) {\n                    item.cancellation.applied.user = userService.resolveUserName({ userId: _.get(item, 'cancellation.applied.by'), users: users });\n                }\n\n                if (item.cancellation.approved) {\n                    item.cancellation.approved.user = userService.resolveUserName({ userId: _.get(item, 'cancellation.approved.by'), users: users });\n                }\n\n                if (item.cancellation.reason) {\n\n                    if (item.cancellation.reason.returnType === Enums.ReturnTypes.Cancellation) {\n                        // canceled items\n                        item.displayReturnType = translateService.getText('CANCEL');\n                    } else if (item.cancellation.reason.returnType === Enums.ReturnTypes.Transfer) {\n                        item.displayReturnType = translateService.getText('TRANSFER');\n                    } else {\n                        // returned items\n                        item.displayReturnType = translateService.getText('RETURN');\n                    }\n\n                    item.cancellation.text = utilsText.getCommentText(item.cancellation.comment);\n                } else {\n                    console.log('reason object id missing');\n                }\n\n                if (offer.quantitySaleId) {\n                    if (quantitySaleGroups[offer.quantitySaleId] === undefined) {\n                        quantitySaleGroups[offer.quantitySaleId] = [];\n                    }\n\n                    quantitySaleGroups[offer.quantitySaleId].push(item);\n                } else {\n                    result.push(item);\n                }\n            }\n        });\n\n        if (quantitySaleGroups !== undefined) {\n\n            for (var key in quantitySaleGroups) {\n\n                if (quantitySaleGroups.hasOwnProperty(key)) {\n\n                    var collection = quantitySaleGroups[key];\n\n                    var qty = collection.length;\n                    var item = collection[0];\n                    item.qty = qty;\n                    result.push(item);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function resolveUnasignedItems(order) {\n\n        var result = [];\n\n        var orederdOfferItems = [];\n\n        var orderedItems = order.orderedItems;\n        var orderedOffers = order.orderedOffers;\n\n        orderedOffers.forEach(function (offer) {\n\n            if (offer.orderedItems.length) {\n\n                offer.items = [];\n                offer.orderedItems.forEach(function (itemId) {\n                    var orderedItem = orderedItems.find(function (c) {\n                        return c._id === itemId;\n                    });\n                    if (orderedItem) {\n                        offer.items.push(orderedItem);\n                        orederdOfferItems.push(orderedItem);\n                    }\n                });\n            }\n        });\n\n        orderedItems.forEach(function (item) {\n\n            if (!item.cancellation) {\n\n                var found = orederdOfferItems.find(function (c) {\n                    return c._id === item._id;\n                });\n                if (!found) {\n                    result.push(item);\n                }\n            }\n        });\n\n        return result;\n    }\n\n    ItemsService.prototype.resolveCencelledItems = resolveCencelledItems;\n    ItemsService.prototype.resolveUnasignedItems = resolveUnasignedItems;\n\n    return ItemsService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/Items.js?");

/***/ }),

/***/ "./src/order-view/services/Oth.js":
/*!****************************************!*\
  !*** ./src/order-view/services/Oth.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.OthService = function () {\n\n    var translateService = void 0;\n    var userService = void 0;\n    var utils = void 0;\n\n    function OthService(options) {\n\n        translateService = new window.OrderDataLib.TranslateService({\n            local: options.local\n        });\n\n        userService = new window.OrderDataLib.UserService();\n    }\n\n    function resolveOrderOTH(order, options) {\n\n        var users = options.users;\n\n        var result = [];\n        var data = void 0;\n\n        if (order.onTheHouse) {\n\n            data = order.onTheHouse.reason.name;\n            if (order.onTheHouse.comment) {\n                data += ': ' + order.onTheHouse.comment;\n            }\n\n            // OTH request\n            result.push({\n                action: translateService.getText('OTH_ORDER_APPLIED'),\n                data: data,\n                at: order.onTheHouse.applied.at,\n                by: userService.resolveUserName({ userId: _.get(order, 'onTheHouse.applied.by'), users: users })\n            });\n\n            // OTH approved\n            if (order.onTheHouse.approved) {\n                result.push({\n                    action: translateService.getText('OTH_ORDER_APPROVED'),\n                    data: data,\n                    at: order.onTheHouse.approved.at,\n                    by: userService.resolveUserName({ userId: _.get(order, 'onTheHouse.approved.by'), users: users })\n                });\n            }\n        }\n\n        return result;\n    }\n\n    function resolveItemOTH(item, options) {\n\n        var order = options.order;\n        var onTheHouse = options.onTheHouse;\n        var users = options.users;\n        var result = [];\n\n        var data = \"\";\n\n        // if (item.name) {\n        //     data += `${item.name}`;\n        // }\n\n        // if (item.qty !== undefined && item.name) {\n        //     data += ` ${item.qty}x`;\n        // }\n\n        if (onTheHouse && onTheHouse.reason && onTheHouse.reason.name) {\n            data += '' + onTheHouse.reason.name;\n        }\n\n        if (onTheHouse && onTheHouse.comment) {\n            data += \" : \" + onTheHouse.comment;\n        }\n\n        // OTH request\n        if (onTheHouse.applied) {\n            result.push({\n                qty: item.qty,\n                action: translateService.getText('OTH_ITEM_APPLIED'),\n                name: item.name,\n                data: data,\n                at: onTheHouse.applied ? onTheHouse.applied.at : '',\n                by: userService.resolveUserName({ userId: _.get(onTheHouse, 'applied.by'), users: users })\n            });\n        }\n\n        // OTH approved\n        if (onTheHouse.approved) {\n            result.push({\n                qty: item.qty,\n                action: translateService.getText('OTH_ITEM_APPROVED'),\n                name: item.name,\n                data: data,\n                at: onTheHouse.approved ? onTheHouse.approved.at : '',\n                by: userService.resolveUserName({ userId: _.get(onTheHouse, 'approved.by'), users: users })\n            });\n        }\n\n        return result;\n    }\n\n    OthService.prototype.resolveOrderOTH = resolveOrderOTH;\n    OthService.prototype.resolveItemOTH = resolveItemOTH;\n\n    return OthService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/Oth.js?");

/***/ }),

/***/ "./src/order-view/services/Payments.js":
/*!*********************************************!*\
  !*** ./src/order-view/services/Payments.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.PaymentsService = function () {\n\n    var translateService = void 0;\n    var userService = void 0;\n    var utils = void 0;\n\n    var Enums = {\n        PaymentTypes: {\n            OTH: 'OTH',\n            CreditCardPayment: 'CreditCardPayment',\n            ChargeAccountPayment: 'ChargeAccountPayment',\n            CashPayment: 'CashPayment',\n            ChequePayment: 'ChequePayment',\n            ChargeAccountRefund: 'ChargeAccountRefund',\n            CashRefund: 'CashRefund',\n            ChequeRefund: 'ChequeRefund',\n            CreditCardRefund: 'CreditCardRefund'\n        },\n        Sources: {\n            TabitPay: \"tabitPay\"\n        }\n    };\n\n    function PaymentsService(options) {\n\n        utils = new window.OrderDataLib.Utils();\n\n        translateService = new window.OrderDataLib.TranslateService({\n            local: options.local\n        });\n\n        userService = new window.OrderDataLib.UserService();\n    }\n\n    function resolvePayments(order) {}\n\n    function resolvePaymentData(payment) {\n\n        var data = [];\n\n        function buildPaymentRow(payment) {\n\n            var result = [];\n            var _paymentDetailsText = \"\";\n\n            var arr = [];\n\n            // 1. Payment Method Name.\n            var paymentMethodName = resolvePaymentMethodName({\n                key: payment._type,\n                addSpace: true,\n                addChar: \":\"\n            });\n\n            if (paymentMethodName !== \"\") {\n                arr.push(paymentMethodName);\n                _paymentDetailsText += paymentMethodName;\n            }\n\n            // 2. Payment : Credit Card Brand / Account Name\n            if (payment._type === Enums.PaymentTypes.CreditCardPayment || payment._type === Enums.PaymentTypes.CreditCardRefund) {\n                if (payment.creditCardBrand && payment.creditCardBrand !== \"\") {\n                    var value = payment.creditCardBrand;\n                    arr.push(value);\n                    _paymentDetailsText += '  ' + value;\n                }\n            } else if (payment._type === Enums.PaymentTypes.ChargeAccountPayment || payment._type === Enums.PaymentTypes.ChargeAccountRefund) {\n                if (payment.accountName && payment.accountName !== \"\") {\n                    arr.push(payment.accountName);\n                    _paymentDetailsText += payment.accountName;\n                }\n            }\n\n            // 3. Last 4 Number.\n            if (payment.last4 && payment.last4 !== \"\" && payment.last4 !== \"xxxx\") {\n                arr.push(payment.last4);\n                _paymentDetailsText += '  ' + payment.last4;\n            }\n\n            // Add array texts of 1, 2 & 3.\n            if (arr.length > 0) {\n                var _text = \"\";\n                arr.forEach(function (c) {\n                    return _text += \"  \" + c;\n                });\n                result.push({ value: _text });\n            }\n\n            // 4. Amount.\n            var amount = utils.toFixedSafe(utils.currencyFraction(payment.amount), 2);\n            result.push({ key: translateService.getText('AMOUNT'), value: amount });\n\n            // 5. Customer Holder Name.\n            var holderName = \"\";\n            if (payment.customerDetails) {\n                if (payment.customerDetails.name && payment.customerDetails.name !== \"\") {\n                    result.push({ key: translateService.getText('CUSTOMER_NAME'), value: payment.customerDetails.name });\n                }\n            }\n\n            // 6. Source TabitPay.\n            if (payment._type === Enums.PaymentTypes.CreditCardPayment || payment._type === Enums.PaymentTypes.CreditCardRefund) {\n\n                if (payment.source === Enums.Sources.TabitPay) {\n                    var _value = \"(Tabit Pay)\";\n                    result.push({ key: 'source', value: _value });\n                }\n            }\n\n            return result;\n        }\n\n        var paymentDetails = buildPaymentRow(payment);\n        paymentDetails.forEach(function (c) {\n            return data.push(c);\n        });\n        return data;\n    }\n\n    function resolvePaymentMethodName(options) {\n\n        var key = options.key;\n        var addSpace = options.addSpace;\n        var addChar = options.addChar;\n\n        var paymentsHash = {\n            oth: translateService.getText('OTH'),\n            ChargeAccountPayment: translateService.getText('CHARGE_ACCOUNT'),\n            CashPayment: translateService.getText('CASH'),\n            GiftCard: translateService.getText('GIFT_CARD'),\n            GiftCardLoad: translateService.getText('GIFT_CARD_LOAD'),\n            ChequePayment: translateService.getText('CHEQUE'),\n            CreditCardPayment: translateService.getText('CREDIT'),\n            ChargeAccountRefund: translateService.getText('CHARGE_ACCOUNT_REFUND'),\n            CashRefund: translateService.getText('CASH_REFUND'),\n            ChequeRefund: translateService.getText('CHEQUE_REFUND'),\n            CreditCardRefund: translateService.getText('CREDIT_REFUND')\n        };\n\n        var result = \"\";\n        if (key === \"CreditCardPayment\") {\n            result = \"\";\n        } else {\n            result = paymentsHash[key];\n            if (addChar === undefined) {\n                addChar = \"-\";\n            }\n            if (addSpace) {\n                result += \" \" + addChar + \" \";\n            }\n        }\n\n        return result;\n    }\n\n    function resolvePaymentNames(order) {\n\n        function addIfNotExists(list, item) {\n            if (list.indexOf(item) === -1) {\n                list.push(item);\n            }\n        }\n\n        var result = [];\n        var payments = order.payments;\n\n        if (payments) {\n\n            if (order.onTheHouse) {\n                result.push(Enums.PaymentTypes.OTH);\n            } else {\n\n                payments.forEach(function (payment) {\n\n                    switch (payment._type) {\n                        case Enums.PaymentTypes.ChargeAccountPayment:\n                            addIfNotExists(result, Enums.PaymentTypes.ChargeAccountPayment);\n                            break;\n                        case Enums.PaymentTypes.CashPayment:\n                            addIfNotExists(result, Enums.PaymentTypes.CashPayment);\n                            break;\n                        case Enums.PaymentTypes.ChequePayment:\n                            addIfNotExists(result, Enums.PaymentTypes.ChequePayment);\n                            break;\n                        case Enums.PaymentTypes.CreditCardPayment:\n                            addIfNotExists(result, Enums.PaymentTypes.CreditCardPayment);\n                            break;\n                        case Enums.PaymentTypes.CashRefund:\n                            addIfNotExists(result, Enums.PaymentTypes.CashRefund);\n                            break;\n                        case Enums.PaymentTypes.ChequeRefund:\n                            addIfNotExists(result, Enums.PaymentTypes.ChequeRefund);\n                            break;\n                        case Enums.PaymentTypes.CreditCardRefund:\n                            addIfNotExists(result, Enums.PaymentTypes.CreditCardRefund);\n                            break;\n\n                        default:\n                            break;\n                    }\n                });\n            }\n        }\n\n        return result.join('+');\n    }\n\n    function resolvePaymentsAmount(order) {\n\n        var payments = order.payments;\n\n        payments.forEach(function (payment) {\n\n            payment.name = payment._type;\n\n            if (payment.customerDetails !== undefined) {\n                payment.holderName = payment.customerDetails.name !== undefined ? payment.customerDetails.name : '';\n            }\n\n            if (payment._type === Enums.PaymentTypes.CreditCardRefund || payment._type === Enums.PaymentTypes.ChargeAccountRefund || payment._type === Enums.PaymentTypes.CashRefund || payment._type === Enums.PaymentTypes.ChequeRefund || payment._type === Enums.PaymentTypes.CreditCardRefund) {\n                payment.amount *= -1;\n            }\n\n            payment.methodName = resolvePaymentMethodName({\n                key: payment._type,\n                addSpace: false\n            });\n\n            payment.methodName += \" \";\n\n            if (payment._type === Enums.PaymentTypes.ChargeAccountPayment) {\n                payment.methodName += payment.accountName;\n            }\n\n            if (payment._type === Enums.PaymentTypes.ChequeRefund) {\n                payment.accountName = \"cheque_refund\";\n            }\n        });\n\n        return payments;\n    }\n\n    PaymentsService.prototype.resolvePayments = resolvePayments;\n    PaymentsService.prototype.resolvePaymentData = resolvePaymentData;\n    PaymentsService.prototype.resolvePaymentNames = resolvePaymentNames;\n    PaymentsService.prototype.resolvePaymentsAmount = resolvePaymentsAmount;\n\n    return PaymentsService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/Payments.js?");

/***/ }),

/***/ "./src/order-view/services/Promotions.js":
/*!***********************************************!*\
  !*** ./src/order-view/services/Promotions.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.PromotionsService = function () {\n\n    var utils = void 0;\n\n    function PromotionsService(options) {\n\n        utils = new window.OrderDataLib.Utils();\n    }\n\n    function resolvePromotions(order, options) {\n\n        var _promotions = options.promotions;\n\n        var _service = {\n            groupRewardsByOrderedDiscounts: function groupRewardsByOrderedDiscounts(rewards, orderedDiscounts) {\n\n                var inOrderedDiscounts = [];\n                var outOrderedDiscounts = [];\n\n                rewards.forEach(function (reward) {\n\n                    var promotionId = reward.promotion;\n\n                    var orderedDiscount = orderedDiscounts.find(function (c) {\n                        return c._id === promotionId;\n                    });\n\n                    if (orderedDiscount) {\n                        inOrderedDiscounts.push(reward);\n                    } else {\n                        outOrderedDiscounts.push(reward);\n                    }\n                });\n\n                return {\n                    inOrderedDiscounts: inOrderedDiscounts,\n                    outOrderedDiscounts: outOrderedDiscounts\n                };\n            },\n            enrichRewardsWithOffer: function enrichRewardsWithOffer(collection, orderedOffers) {\n\n                collection.forEach(function (reward) {\n\n                    var orderedOfferId = _.get(reward, 'discount.rewardedResources[0].orderedOffer');\n                    if (orderedOfferId === undefined) {\n                        orderedOfferId = _.get(reward, 'discount.discountApportionment[0].resource.orderedOffer');\n                    }\n\n                    var orderedOffer = orderedOffers.find(function (c) {\n                        return c._id === orderedOfferId;\n                    });\n                    reward.md = { offer: orderedOffer };\n                });\n\n                return collection;\n            },\n            groupByQuantitySale: function groupByQuantitySale(options) {\n\n                var inOrderedDiscounts = options.inOrderedDiscounts;\n                var outOrderedDiscounts = options.outOrderedDiscounts;\n\n                var quantitySaleGroups = {};\n\n                inOrderedDiscounts.forEach(function (reward) {\n\n                    var quantitySaleId = _.get(reward, 'md.offer.quantitySaleId') ? reward.md.offer.quantitySaleId : null;\n\n                    if (quantitySaleId !== undefined) {\n\n                        if (!quantitySaleGroups.hasOwnProperty(quantitySaleId)) {\n                            quantitySaleGroups[quantitySaleId] = [];\n                        }\n\n                        quantitySaleGroups[quantitySaleId].push(reward);\n                    }\n                });\n\n                outOrderedDiscounts.forEach(function (reward) {\n\n                    var quantitySaleId = _.get(reward, 'md.offer.quantitySaleId') ? reward.md.offer.quantitySaleId : null;\n\n                    if (quantitySaleId !== undefined) {\n\n                        if (!quantitySaleGroups.hasOwnProperty(quantitySaleId)) {\n                            quantitySaleGroups[quantitySaleId] = [];\n                        }\n\n                        quantitySaleGroups[quantitySaleId].push(reward);\n                    }\n                });\n\n                return quantitySaleGroups;\n            }\n        };\n\n        var rewards = JSON.parse(JSON.stringify(order.rewards));\n        var orderedOffers = order.orderedOffers;\n        var orderedDiscounts = order.orderedDiscounts;\n\n        var rewardsByOrderedDiscounts = _service.groupRewardsByOrderedDiscounts(rewards, orderedDiscounts);\n        rewardsByOrderedDiscounts.inOrderedDiscounts = _service.enrichRewardsWithOffer(rewardsByOrderedDiscounts.inOrderedDiscounts, orderedOffers);\n        rewardsByOrderedDiscounts.outOrderedDiscounts = _service.enrichRewardsWithOffer(rewardsByOrderedDiscounts.outOrderedDiscounts, orderedOffers);\n\n        var quantitySaleGroups = _service.groupByQuantitySale({\n            inOrderedDiscounts: rewardsByOrderedDiscounts.inOrderedDiscounts,\n            outOrderedDiscounts: rewardsByOrderedDiscounts.outOrderedDiscounts\n        });\n\n        for (var key in quantitySaleGroups) {\n            if (quantitySaleGroups.hasOwnProperty(key)) {\n                var quantitySaleGroup = quantitySaleGroups[key];\n\n                quantitySaleGroups[key] = utils.uniqBy(quantitySaleGroup, 'promotion');\n\n                quantitySaleGroups[key] = quantitySaleGroups[key].filter(function (reward) {\n                    var promotion = _promotions.find(function (c) {\n                        return c._id === reward.promotion;\n                    });\n                    if (promotion !== undefined) {\n                        reward.md.promotion = promotion;\n                        return reward;\n                    }\n                });\n            }\n        }\n\n        var result = _.union(Object.values(quantitySaleGroups));\n        var merged = [].concat.apply([], result);\n\n        return merged;\n    }\n\n    function resolvePromotionsCollection(rewards, orderedPromotions) {\n\n        var result = [];\n\n        rewards.forEach(function (reward) {\n\n            var totalAmount = 0;\n\n            if (reward.qty && _.get(reward, 'discount.amount')) {\n                totalAmount = reward.qty * reward.discount.amount;\n            }\n\n            var promotionId = _.get(reward, 'md.promotion._id');\n            var orderedPromotion = orderedPromotions.find(function (c) {\n                return c.promotion === promotionId;\n            });\n\n            result.push({\n                qty: reward.qty,\n                name: reward.name,\n                amount: _.get(reward, 'discount.amount') || '',\n                totalAmount: totalAmount,\n                redeemCode: _.get(orderedPromotion, 'redeemCode')\n            });\n        });\n\n        return result;\n    }\n\n    PromotionsService.prototype.resolvePromotions = resolvePromotions;\n    PromotionsService.prototype.resolvePromotionsCollection = resolvePromotionsCollection;\n\n    return PromotionsService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/Promotions.js?");

/***/ }),

/***/ "./src/order-view/services/Segmentations.js":
/*!**************************************************!*\
  !*** ./src/order-view/services/Segmentations.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.SegmentationsService = function () {\n\n    var translateService = void 0;\n    var userService = void 0;\n\n    function SegmentationsService(options) {\n\n        translateService = new window.OrderDataLib.TranslateService({\n            local: options.local\n        });\n\n        userService = new window.OrderDataLib.UserService();\n    }\n\n    function resolveSegmentationsTimeLine(order, options) {\n\n        var users = options.users;\n        var segmentations = order.segmentations;\n        var diners = order.diners;\n\n        var result = [];\n\n        if (segmentations.length > 0) {\n            segmentations.forEach(function (segment) {\n\n                if (segment.applied) {\n                    result.push({\n                        action: translateService.getText('APPLIED_SEGMENTATION'),\n                        data: segment.name,\n                        at: segment.applied.at,\n                        by: userService.resolveUserName({ userId: _.get(segment, 'applied.by'), users: users })\n                    });\n                }\n\n                if (segment.approved) {\n                    result.push({\n                        action: translateService.getText('APPROVED_SEGMENTATION'),\n                        data: segment.name,\n                        at: segment.approved.at,\n                        by: userService.resolveUserName({ userId: _.get(segment, 'approved.by'), users: users })\n                    });\n                }\n            });\n        }\n\n        if (diners.length > 0) {\n\n            diners.forEach(function (diner) {\n\n                if (diner.segmentations) {\n\n                    diner.segmentations.forEach(function (segment) {\n\n                        if (segment.applied) {\n                            result.push({\n                                action: translateService.getText('APPLIED_SEGMENTATION'),\n                                data: segment.name,\n                                at: segment.applied.at,\n                                by: userService.resolveUserName({ userId: _.get(segment, 'applied.by'), users: users })\n                            });\n                        }\n\n                        if (segment.approved) {\n                            result.push({\n                                action: translateService.getText('APPROVED_SEGMENTATION'),\n                                data: segment.name,\n                                at: segment.approved.at,\n                                by: userService.resolveUserName({ userId: _.get(segment, 'approved.by'), users: users })\n                            });\n                        }\n                    });\n                }\n            });\n        }\n\n        return result;\n    }\n\n    SegmentationsService.prototype.resolveSegmentationsTimeLine = resolveSegmentationsTimeLine;\n\n    return SegmentationsService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/Segmentations.js?");

/***/ }),

/***/ "./src/order-view/services/Table.js":
/*!******************************************!*\
  !*** ./src/order-view/services/Table.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.TableService = function () {\n\n    var translateService = void 0;\n\n    var OrderTypes = {\n        Refund: \"Refund\",\n        TA: \"TA\",\n        Delivery: \"Delivery\",\n        Seated: \"Seated\",\n        OTC: \"OTC\"\n    };\n\n    function TableService(options) {\n\n        translateService = new window.OrderDataLib.TranslateService({\n            local: options.local\n        });\n    }\n\n    function resolveTable(order, options) {\n\n        var orderType = order.orderType;\n        var tableIds = order.tableIds;\n\n        var tables = options.tables;\n\n        var table = \"\";\n        if (orderType === OrderTypes.Refund) {\n            table = translateService.getText('REFUND');\n        } else if (orderType === OrderTypes.TA) {\n            table = translateService.getText('TA');\n        } else if (orderType === OrderTypes.Delivery) {\n            table = translateService.getText('DELIVERY');\n        } else {\n            if (tables && tables.length > 0) {\n                var _table = tables.find(function (c) {\n                    return c._id === tableIds[0];\n                });\n                table = _table ? _table.number : '';\n            }\n        }\n\n        return table;\n    }\n\n    TableService.prototype.resolveTable = resolveTable;\n\n    return TableService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/Table.js?");

/***/ }),

/***/ "./src/order-view/services/TimeLine.js":
/*!*********************************************!*\
  !*** ./src/order-view/services/TimeLine.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.TimeLineService = function () {\n\n    var utils = void 0;\n    var translateService = void 0;\n    var paymentsService = void 0;\n    var userService = void 0;\n    var othService = void 0;\n    var discountsService = void 0;\n    var segmentationsService = void 0;\n    var historiesService = void 0;\n\n    var CourseActions = ['notified', 'fired', 'served', 'prepared', 'taken'];\n\n    var ReturnTypes = {\n        Cancellation: 'cancellation',\n        TransactionBased: \"TRANSACTION BASED\",\n        Transfer: \"transfer\"\n    };\n\n    function TimeLineService(options) {\n\n        utils = new window.OrderDataLib.Utils();\n\n        translateService = new window.OrderDataLib.TranslateService({\n            local: options.local\n        });\n\n        paymentsService = new window.OrderDataLib.PaymentsService({\n            local: options.local\n        });\n\n        userService = new window.OrderDataLib.UserService();\n\n        othService = new window.OrderDataLib.OthService({\n            local: options.local\n        });\n\n        discountsService = new window.OrderDataLib.DiscountsService({\n            local: options.local\n        });\n\n        segmentationsService = new window.OrderDataLib.SegmentationsService({\n            local: options.local\n        });\n\n        historiesService = new window.OrderDataLib.HistoriesService({\n            local: options.local\n        });\n    }\n\n    var utilsText = {\n        getCommentText: function getCommentText(comment) {\n\n            if (_.isEmpty(comment)) {\n                return \"\";\n            }\n\n            // patch to translate 'Transfering items'' check if is a transfering by the comment text\n\n            if (comment.indexOf('Transfering items') === 0) {\n                var arr = comment.split(' ');\n                var table = arr[4];\n                return translateService.getText('TRANSFERING_ITEMS_TO_TABLE', ['table'], [table]);\n            } else {\n                return comment;\n            }\n        }\n    };\n\n    var utilsData = function () {\n\n        function isTransferItem(data, item) {\n\n            var returnType = _.get(item, 'cancellation.reason.returnType');\n\n            if (returnType === \"transfer\") return true;\n\n            return false;\n        }\n\n        function isRefundOrder(order) {\n\n            var type = _.get(order, 'payments[0]._type', '');\n            var isRefund = type.toUpperCase().indexOf('refund'.toUpperCase()) > -1;\n            return isRefund;\n        }\n\n        return {\n            isTransferItem: isTransferItem,\n            isRefundOrder: isRefundOrder\n        };\n    }();\n\n    var service = {\n        getOpenedTime: function getOpenedTime(order) {\n\n            var action = translateService.getText('OPEN');\n            var isRefund = utilsData.isRefundOrder(order);\n\n            if (order.orderType === 'Seated' && order.tableIds.length === 0 && !isRefund) {\n                action = 'Open Tab';\n            }\n\n            return {\n                action: action,\n                data: translateService.getText('ORDER'),\n                at: order.created,\n                by: order.waiter\n            };\n        },\n        getClosedTime: function getClosedTime(order) {\n            return {\n                action: translateService.getText('CLOSE'),\n                data: translateService.getText('ORDER'),\n                at: order.closed,\n                by: '' // can't determine who closed order\n            };\n        },\n        getCourse: function getCourse(order) {\n\n            var result = [];\n\n            var orderedItems = order.orderedItems;\n            var orderedOffers = order.orderedOffers;\n            var cancelledOffers = order.cancelledOffers;\n            var courses = order.courses;\n\n            function mappingItems(itemsIds) {\n\n                var result = [];\n                var quantitySaleGroups = {};\n\n                if (itemsIds === undefined || itemsIds.length === 0) return result;\n\n                var _offers = orderedOffers.concat(cancelledOffers);\n\n                _offers.forEach(function (offer) {\n\n                    var itemid = itemsIds.find(function (itemid) {\n                        return itemid === _.get(offer, 'orderedItems[0]');\n                    });\n                    if (!itemid) {\n                        itemid = itemsIds.find(function (itemid) {\n                            return itemid === _.get(offer, 'cancelledItems[0]');\n                        });\n                    }\n\n                    var item = undefined;\n                    if (itemid) {\n                        item = orderedItems.find(function (item) {\n                            return item._id === itemid;\n                        });\n                    }\n\n                    if (!item) {\n                        return;\n                    }\n\n                    delete item.qty;\n\n                    if (offer.quantitySaleId) {\n                        if (quantitySaleGroups[offer.quantitySaleId] === undefined) {\n                            quantitySaleGroups[offer.quantitySaleId] = [];\n                        }\n\n                        quantitySaleGroups[offer.quantitySaleId].push(item);\n                    } else {\n                        result.push(item);\n                    }\n                });\n\n                if (quantitySaleGroups !== undefined) {\n\n                    for (var key in quantitySaleGroups) {\n\n                        if (quantitySaleGroups.hasOwnProperty(key)) {\n\n                            var collection = quantitySaleGroups[key];\n\n                            var qty = collection.length;\n                            var _item = collection[0];\n                            _item.qty = qty;\n                            result.push(_item);\n                        }\n                    }\n                }\n\n                return result;\n            }\n\n            courses.forEach(function (course) {\n\n                var items = mappingItems(course.orderedItems).map(function (item) {\n\n                    if (item.qty && item.qty > 1) {\n                        return item.name + ' ' + item.qty + 'x';\n                    } else {\n                        return '' + item.name;\n                    }\n                });\n\n                CourseActions.forEach(function (action) {\n\n                    if (_.has(course, action) && course[action]) {\n\n                        var courseType = '';\n                        if (course.courseType) courseType = course.courseType.toUpperCase();\n\n                        result.push({\n                            action: action + ' ' + translateService.getText(courseType),\n                            data: JSON.parse(JSON.stringify(items)).filter(function (c) {\n                                return c !== undefined;\n                            }).join(',  '),\n                            at: course[action].at,\n                            by: course[action].waiter\n                        });\n                    }\n                });\n            });\n\n            return result;\n        },\n        getPayments: function getPayments(order, options) {\n\n            var users = options.users;\n\n            var payments = order.payments;\n\n            var result = [];\n\n            payments.forEach(function (payment) {\n                result.push({\n                    action: translateService.getText('PAYMENT'),\n                    data: paymentsService.resolvePaymentData(payment), // Return array of values.\n                    at: payment.lastUpdated,\n                    by: userService.resolveUserName({ userId: payment.user, users: users }),\n                    recordType: \"payment\" //only for the payments record in the time line.\n                });\n            });\n\n            return result;\n        },\n        getApprovedBy: function getApprovedBy(order, options) {\n\n            var users = options.users;\n\n            var payments = order.payments;\n\n            var result = [];\n\n            payments.forEach(function (payment) {\n\n                var isApproved = false;\n                var aprroved = void 0;\n\n                if (payment.approved) {\n                    aprroved = payment.approved;\n                    isApproved = true;\n                }\n\n                if (isApproved) {\n                    result.push({\n                        action: translateService.getText('APPROVED'),\n                        data: paymentsService.resolvePaymentData(payment), // Return array of values.\n                        at: aprroved.at,\n                        by: userService.resolveUserName({ userId: aprroved.by, users: users }),\n                        isApproved: isApproved //only for the payments record in the time line.\n                    });\n                }\n            });\n\n            return result;\n        },\n        getCancellationsAndOTH: function getCancellationsAndOTH(order, options) {\n\n            var users = options.users;\n\n            var orderedItems = order.orderedItems;\n            var orderedOffers = JSON.parse(JSON.stringify(order.orderedOffers));\n            var cancelledOffers = order.cancelledOffers;\n\n            var result = [];\n            var tempResult = [];\n            var quantitySaleGroups = {};\n\n            orderedItems.forEach(function (item) {\n\n                var offer = orderedOffers.find(function (c) {\n                    return item._id === _.get(c, 'orderedItems[0]');\n                });\n                if (!offer) {\n                    offer = cancelledOffers.find(function (c) {\n                        return item._id === _.get(c, 'cancelledItems[0]');\n                    });\n                    if (!offer) {\n                        return;\n                    }\n                }\n\n                if (offer.quantitySaleId) {\n                    if (quantitySaleGroups[offer.quantitySaleId] === undefined) {\n                        quantitySaleGroups[offer.quantitySaleId] = [];\n                    }\n\n                    quantitySaleGroups[offer.quantitySaleId].push(item);\n                } else {\n                    tempResult.push(item);\n                }\n            });\n\n            if (quantitySaleGroups !== undefined) {\n\n                for (var key in quantitySaleGroups) {\n\n                    if (quantitySaleGroups.hasOwnProperty(key)) {\n\n                        var collection = quantitySaleGroups[key];\n\n                        var qty = collection.length;\n                        var offer = collection[0];\n                        offer.qty = qty;\n                        tempResult.push(offer);\n                    }\n                }\n            }\n\n            var orderedItemsByQuantitySale = tempResult;\n\n            orderedItemsByQuantitySale.forEach(function (item) {\n\n                var offer = orderedOffers.find(function (c) {\n                    return _.get(c, 'offer._id') === item.offer;\n                });\n\n                if (item.cancellation) {\n                    var _reasonName = \"\";\n\n                    if (_.get(item, 'cancellation.reason.returnType') === ReturnTypes.Transfer) {\n                        _reasonName = translateService.getText('TRANSFER');\n                    } else if (item.cancellation.reason) {\n                        _reasonName = item.cancellation.reason.name;\n                    }\n\n                    var data = _reasonName;\n                    if (item.cancellation.comment) {\n                        data += ': ' + utilsText.getCommentText(item.cancellation.comment);\n                    }\n\n                    if (item.cancellation.reason && item.cancellation.reason.returnType == 'cancellation') {\n\n                        // cancellation request\n                        result.push({\n                            qty: item.qty,\n                            action: translateService.getText('CANCEL_ITEM_APPLIED'),\n                            name: item.name,\n                            data: data,\n                            at: _.get(item, 'cancellation.applied.at'),\n                            by: userService.resolveUserName({ userId: _.get(item, 'cancellation.applied.by'), users: users })\n                        });\n\n                        // cancellation approved\n                        if (item.cancellation.approved) {\n                            result.push({\n                                qty: item.qty,\n                                action: translateService.getText('CANCEL_ITEM_APPROVED'),\n                                name: item.name,\n                                data: data,\n                                at: _.get(item, 'cancellation.approved.at'),\n                                by: userService.resolveUserName({ userId: _.get(item, 'cancellation.approved.by'), users: users })\n                            });\n                        }\n                    } else {\n\n                        var isTransfer = utilsData.isTransferItem(data, item);\n\n                        // return request\n                        result.push({\n                            qty: item.qty,\n                            action: isTransfer ? translateService.getText('TRANSFER_ITEM_APPLIED') : translateService.getText('RETURN_ITEM_APPLIED'),\n                            name: item.name,\n                            data: data,\n                            at: _.get(item, 'cancellation.applied.at'),\n                            by: userService.resolveUserName({ userId: _.get(item, 'cancellation.applied.by'), users: users })\n                        });\n\n                        // return approved\n                        if (item.cancellation.approved) {\n                            result.push({\n                                qty: item.qty,\n                                action: isTransfer ? translateService.getText('TRANSFER_ITEM_APPROVED') : translateService.getText('RETURN_ITEM_APPROVED'),\n                                name: item.name,\n                                data: data,\n                                at: _.get(item, 'cancellation.approved.at'),\n                                by: userService.resolveUserName({ userId: _.get(item, 'cancellation.approved.by'), users: users })\n                            });\n                        }\n                    }\n                } else if (item.onTheHouse && !order.onTheHouse && item.cancellation === undefined) {\n\n                    // is OTH on item and not OTH on order.\n\n                    var OTHItems = othService.resolveItemOTH(item, {\n                        onTheHouse: item.onTheHouse || offer.onTheHouse,\n                        order: order,\n                        users: users\n                    });\n\n                    OTHItems.forEach(function (c) {\n                        return result.push(c);\n                    });\n                }\n\n                // else if ((item.onTheHouse && !order.onTheHouse && !item.cancellation) || (offer && offer.onTheHouse && !order.onTheHouse)) {\n\n                //     let OTHItems = othService.resolveItemOTH(item, {\n                //         onTheHouse: item.onTheHouse || offer.onTheHouse,\n                //         order: order,\n                //         users: users\n                //     });\n\n                //     OTHItems.forEach(c => result.push(c));\n                // }\n            });\n\n            var orderOTHs = othService.resolveOrderOTH(order, { users: users });\n            orderOTHs.forEach(function (item) {\n                result.push(item);\n            });\n\n            return result;\n        },\n        getDiscounts: function getDiscounts(order, options) {\n            return discountsService.resolveDiscountsTimeLine(order, { users: options.users });\n        },\n        getSegmentations: function getSegmentations(order, options) {\n\n            return segmentationsService.resolveSegmentationsTimeLine(order, {\n                users: options.users\n            });\n        },\n        getHistories: function getHistories(order, options) {\n\n            return historiesService.resolveHistoriesToTimeLine(order, {\n                users: options.users\n            });\n        },\n        getDeliveryTime: function getDeliveryTime(order, options) {\n            var result = [];\n\n            if (order.orderType === 'Delivery') {\n                if (order.delivered) {\n                    result.push({\n                        action: translateService.getText('DELIVERED'),\n                        data: translateService.getText('ORDER'),\n                        at: order.delivered.at,\n                        by: userService.resolveUserName({ userId: order.delivered.by, users: options.users })\n                    });\n                }\n            }\n\n            return result;\n        }\n    };\n\n    function resolveTimeLine(order, options) {\n\n        var users = options.users;\n\n        var timeline = [];\n\n        // Resolve Opened Time.\n        timeline.push(service.getOpenedTime(order));\n\n        // Resolve Closed Time.\n        timeline.push(service.getClosedTime(order));\n\n        // Resolve Courses.\n        var courses = service.getCourse(order);\n        courses.forEach(function (courseItem) {\n            timeline.push(courseItem);\n        });\n\n        // Resolve Payments.\n        var payments = service.getPayments(order, { users: users });\n        payments.forEach(function (paymentItem) {\n            timeline.push(paymentItem);\n        });\n\n        // Resolve Approved By.\n        var approvedBy = service.getApprovedBy(order, { users: users });\n        approvedBy.forEach(function (approvedByItem) {\n            timeline.push(approvedByItem);\n        });\n\n        // Resolve Cancellations And OTH.\n        var cancellationsAndOTH = service.getCancellationsAndOTH(order, { users: users });\n        cancellationsAndOTH.forEach(function (item) {\n            timeline.push(item);\n        });\n\n        // Resolve Discounts.\n        var discounts = service.getDiscounts(order, { users: users });\n        discounts.forEach(function (discountItem) {\n            return timeline.push(discountItem);\n        });\n\n        // Resolve Segmentations.\n        var segmentations = service.getSegmentations(order, { users: users });\n        segmentations.forEach(function (segmentationItem) {\n            return timeline.push(segmentationItem);\n        });\n\n        // Resolve Histories.\n        var histories = service.getHistories(order, { users: users });\n        histories.forEach(function (historyItem) {\n            return timeline.push(historyItem);\n        });\n\n        // Resolve Delivery Time.\n        var deliveries = service.getDeliveryTime(order, { users: users });\n        deliveries.forEach(function (delivery) {\n            return timeline.push(delivery);\n        });\n\n        timeline = _.sortBy(timeline, 'at');\n\n        return timeline;\n    }\n\n    TimeLineService.prototype.resolveTimeLine = resolveTimeLine;\n\n    return TimeLineService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/TimeLine.js?");

/***/ }),

/***/ "./src/order-view/services/User.js":
/*!*****************************************!*\
  !*** ./src/order-view/services/User.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nwindow.OrderDataLib.UserService = function () {\n\n    var utils = void 0;\n\n    function UserService(options) {\n\n        utils = new window.OrderDataLib.Utils();\n    }\n\n    function resolveUserName(options) {\n\n        var userId = options.userId;\n        var users = options.users;\n\n        var result = 'None';\n\n        if (users && users.length > 0) {\n            var user = users.find(function (c) {\n                return c._id === userId;\n            });\n            if (user) {\n                return user.firstName + \" \" + user.lastName;\n            }\n        }\n\n        return result;\n    }\n\n    function resolveUser(options) {\n\n        var userId = options.userId;\n        var users = options.users;\n\n        var result = void 0;\n        if (users && users.length > 0) {\n            result = users.find(function (c) {\n                return c._id === userId;\n            });\n        }\n\n        if (result) {\n            result.displayName = resolveServerName({ user: result });\n        } else {\n            console.log(\"missing users\");\n        }\n\n        return result;\n    }\n\n    function resolveServerName(options) {\n\n        var user = options.user;\n\n        var result = \"\";\n        if (user.firstName !== undefined) {\n            result += user.firstName;\n        }\n\n        if (user.lastName !== undefined) {\n            result += \" \" + user.lastName[0];\n        }\n\n        return result;\n    }\n\n    UserService.prototype.resolveUserName = resolveUserName;\n    UserService.prototype.resolveUser = resolveUser;\n\n    return UserService;\n}();\n\n//# sourceURL=webpack:///./src/order-view/services/User.js?");

/***/ }),

/***/ 0:

  !*** multi ./src/index.js ./src/order-view/OrderView.js ./src/order-view/Translate.js ./src/order-view/Utils.js ./src/order-view/services/User.js ./src/order-view/services/TimeLine.js ./src/order-view/services/Table.js ./src/order-view/services/Segmentations.js ./src/order-view/services/Promotions.js ./src/order-view/services/Payments.js ./src/order-view/services/Oth.js ./src/order-view/services/Items.js ./src/order-view/services/Histories.js ./src/order-view/services/Dishes.js ./src/order-view/services/Discounts.js ./src/order-view/services/Courses.js ***!

/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\index.js */\"./src/index.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\OrderView.js */\"./src/order-view/OrderView.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\Translate.js */\"./src/order-view/Translate.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\Utils.js */\"./src/order-view/Utils.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\User.js */\"./src/order-view/services/User.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\TimeLine.js */\"./src/order-view/services/TimeLine.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\Table.js */\"./src/order-view/services/Table.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\Segmentations.js */\"./src/order-view/services/Segmentations.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\Promotions.js */\"./src/order-view/services/Promotions.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\Payments.js */\"./src/order-view/services/Payments.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\Oth.js */\"./src/order-view/services/Oth.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\Items.js */\"./src/order-view/services/Items.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\Histories.js */\"./src/order-view/services/Histories.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\Dishes.js */\"./src/order-view/services/Dishes.js\");\n__webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\Discounts.js */\"./src/order-view/services/Discounts.js\");\nmodule.exports = __webpack_require__(/*! C:\\Users\\EyalShani_wpaenx0\\WebstormProjects\\order-data\\src\\order-view\\services\\Courses.js */\"./src/order-view/services/Courses.js\");\n\n\n//# sourceURL=webpack:///multi_./src/index.js_./src/order-view/OrderView.js_./src/order-view/Translate.js_./src/order-view/Utils.js_./src/order-view/services/User.js_./src/order-view/services/TimeLine.js_./src/order-view/services/Table.js_./src/order-view/services/Segmentations.js_./src/order-view/services/Promotions.js_./src/order-view/services/Payments.js_./src/order-view/services/Oth.js_./src/order-view/services/Items.js_./src/order-view/services/Histories.js_./src/order-view/services/Dishes.js_./src/order-view/services/Discounts.js_./src/order-view/services/Courses.js?");

/***/ })

/******/ });